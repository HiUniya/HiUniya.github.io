<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OI回忆录&amp;与代码的不解之缘（上）</title>
      <link href="/OI-memory1/"/>
      <url>/OI-memory1/</url>
      
        <content type="html"><![CDATA[<img src="../posts-img/oi-0.jpg" alt="oi-0" style="zoom:50%;" /><blockquote><p>假嘟！是一张十分荒谬的牵手图（要不，先猜猜哪只爪子是我的？文末有答案）</p><p>摄于三年前——CSP-S 2020 复赛期间</p><p>和这张图一样荒谬的，是我的OI生涯</p><p>粗略一算，一不小心就过去了五年；机房还在原处，面孔却已陌生；过往已成云烟，新的故事……</p></blockquote><h2 id="梦开始的地方"><a class="markdownIt-Anchor" href="#梦开始的地方"></a> 梦开始的地方</h2><blockquote><p>开始之前，笔者想问一个小小问题：倘若不让你用电脑打游戏，那么你还会用电脑做些什么呢？</p></blockquote><p>Uniya 很小的时候，家里就有了两台笔记本电脑（搭载奔腾-M处理器的 联想旭日125 和搭载 酷睿2处理器 的 联想3000系列G430A ），那时候还是用电话拨号上网的，滴滴的声音怪神奇的呢。在那时，画画、电视、夜晚的甜汤和椰子糖便构成了 Uniya 的世界。平时照着画的东西不太多，于是Uniya开始网上冲浪，寻找能画的东西。（其实不太记得怎么学会的上网啦~）只记得在蓝天白云绿草地的 Windows XP 系统上，有一个蓝色的大大的e的图标，那是 IE浏览器，打开之后是门户首页，我记得那时还是Hao123，因为喜欢汽车，于是就点开汽车之家，随性的点开一辆车开始画！（顺带一提，电脑上有个PhotoShop7.0，打开之后觉得是奇怪的东西，于是叉掉，点开了画图(●’◡’●)）</p><p>后来，Uniya学会了逛论坛，在房车还是一个新兴事物之时，Uniya看到了许多网友自行改造房车，环游中国，看到了许多优秀的作品。</p><p>就这样，时间拨动到小学二、三年级，在舅舅的帮助下，Uniya注册了第一个QQ账号~（但是同学早早就注册了，Uniya很晚才用上QQ）彼时，在同龄人的影响下，大家时兴着网页游戏，比如赛尔号、4399、QQ农场……你没猜错！Uniya小的时候也玩的——</p><p>这样的好日子不久，某日被母上大人发现在玩网页游戏，Uniya遂遭受一顿竹板炒肉（x），在这之后母上大人就立下规矩：可以看电脑但是不能打游戏！也许是被打怕了？也许是太乖了？总之，Uniya在这之后便没有打过网页游戏了（以至于初三参加比赛时，Joker_M指着我两台笔记本电脑大声吐槽：什么垃圾电脑，4399都玩不了= =）</p><p>回到开头的问题，Uniya的答案是：那就折腾电脑吧！于此，便是梦开始的地方！（以下时间线是并排的）</p><ul><li><p>在某次不经意的闲聊中，Uniya知道了网站这种东西，于是开始从百度搜索，开始学习前端知识；很有趣，在小小的Notepad++编辑器里，对着W3CSchool教程，尝试着每一个Html和Css代码；接着开始接触了PHP语言，不过那时候真的很笨，很多东西是Uniya所不能够了解的</p></li><li><p>在三年级年末的那个暑假，Uniya开始搭建了属于自己的第一个Blog，使用了WordPress博客系统；那时候每天上网冲浪，在贴吧里找各种免费的资源，各种免费的主机，免费的域名；（后来发觉，免费的才是最贵的！倘若母上大人肯支出一些些费用，也许就不用浪费太多的时候在寻找这些资源上了）</p></li><li><p>后来，Uniya试了很多的博客系统，WordPress、Typecho、Z-Blog……还有PHP下的很多项目：著名的DedeCMS（织梦CMS）、Discuz论坛系统、PHPwind论坛系统……还有Hexo和Hugo这两个静态博客系统。</p></li><li><p>随着对网站搭建的逐渐深入，Uniya接触到了Nginx、Apache等等这些底层工具，与此同时正值云服务厂商的大喷发，阿里云、腾讯云开始推出许多免费试用的东西；Uniya开始了解Virtual Host、Virtual Private Server、Linux这些系统构架等等的东西，Github、Coding这两个代码托管服务，以及一些和网站相关的网络协议。</p></li><li><p>在这三年里，Uniya见证了论坛时代的落幕、响应式设计的兴起、微信H5平台的大火、微信公众号的起步，平台建设重心由Web转向Phone。</p></li><li><p>Uniya的第一次折腾是三年级的时候给家里的 G430A 拆机清灰，第二次是在 G430A 上安装轻量化桌面的Ubuntu+Windows双系统，接着开始，Uniya尝试了无数系统，从Windows XP Windows Vista Windows 7 Windows 8.1 Windows 10早期版本；</p></li><li><p>记得某一次，在使用家里电脑的时候，不小心中了一个整蛊软件的招，电脑被锁了密码——还是家里最重要的电脑，Uniya依稀记得，父上大人急得差点把我揍了一顿；Uniya知道怎么修好，其实只要一个WindowsPE的U盘清除密码就好啦，但是没有现成的，还需要下载；但是父上大人和母上大人都不相信我（毕竟怎么会有人觉得一个小屁孩能修好电脑呢对吧，只有破坏电脑的份！），于是他们花了30块钱叫了一位修电脑的技术员，然后当那个技术员来了之后，正巧我的PE也制作好了，于是出现一个很神奇的事情——Uniya 当着那个技术员的面把那个电脑修好了:-D</p></li><li><p>后来，家里人觉得 Uniya 总是搞坏电脑，于是他们丢给了 Uniya 一台二手的Dell Vostro A840，Uniya在这台电脑上第一次安装了 ArchLinux，折腾了无数事物。</p></li><li><p>在五六年级的时候，Uniya学会了PPT软件，帮语文老师制作了老舍《草原》的PPT；学会使用PhotoShop，设计一些网站的LOGO；</p></li><li><p>五年级时，在某次冲浪的时候，有幸加入一个叫可萌工作室的组织！在这里，Uniya接触到了二次元，第一次接触到初音未来，东方project等等。他们用VB6写了一个程序，用来下载漫画（鱼竿漫画下载器）。工作室的站长大家习惯叫WD，某次逛WD的Blog时，发现了一些神奇的东西；不过Uniya当时只是浅浅的问了，这便是Uniya第一次接触到OI相关的内容。</p></li><li><p>可惜，Uniya 的语文真的不好，对于上面的内容 Uniya 没有办法同父母去很好的阐述！于是 Uniya 某段时间总是被误解作沉迷电脑。对于上述的事物，父母也持反对态度。</p></li></ul><h2 id="命运的齿轮开始转动"><a class="markdownIt-Anchor" href="#命运的齿轮开始转动"></a> 命运的齿轮开始转动</h2><blockquote><p>到了初中，Uniya 来到了县城的私立学校——是当时在县城最好的学校</p><p>在这里，Uniya 接触到了形形色色的同学和老师，发生了许多有趣的故事！</p><p>Uniya 虽然讨厌这个学校的某些阴暗的事物，可是 Uniya 会记得发生在这个学校的一切的有趣和美好的事与人！</p></blockquote><p>初一上，学校开设了第二课堂，自然而然的，我参加了信息技术兴趣班班，在这里遇到了我的第一个信息老师——钟老师。</p><p>在某一次交谈中，Uniya 在钟老师的口中再一次接触到了信息学竞赛的事物</p><p><img src="../posts-img/oi-1.png" alt="oi-1" /></p><p>受限于家里的父母还不会网购，同时初一的学习尤其的紧张，只能作罢。</p><p>初一下，学校开设了信息竞赛班，靠着还不错的期末数学成绩，Uniya 开始了信息竞赛的学习</p><blockquote><p>如果你问我，为什么想搞信竞？</p><p>我的回答是，兴趣使然！</p><p>似乎大部分人都认为 Uniya 选择了信竞是因为宣讲会上的所说的保送，于是每当遇到 Uniya 时总会问：你学这个信息竞赛有什么用吗——只不过，Uniya 骗过了所有人，Uniya一开始的想法很简单：只是想找到一个合法化写代码的理由去搪塞来自父母的质问——只不过后来，Uniya 深深迷上了OI罢了。</p><p>这个世界，做什么事情都需要一个很功利的理由？谁告诉你的，我不信。</p></blockquote><p>有着小学自学前端网页的基础，Uniya 学习基础语法十分轻松。</p><blockquote><p>记得第一节课，同班参加的同学C，用中文符号敲代码，结果编译不了，一直很急躁（原谅我不厚道的笑了）</p><p>第二节课，同班一起参加的五位同学就剩下两位了</p><p>第一次淘汰时，Uniya因为期中考忘记填数学填空题答题卡痛失30分了QwQ，于是教练就以文化课成绩差把我踢掉了（x）</p><p>那段时间还挺无奈的= =班主任：你犯什么浑</p><p>再后来，另外一位同学因为觉得递归和递推难以理解，也退出了</p><p>某次周六，我又去了一次机房，找到老师说明自己想要听课的想法，教练同意了！</p><p>于是又继续了，这次注册了洛谷，自学了递归和递推、深搜，接着追赶进度。</p></blockquote><p>很快，NOIP 2018如期而至。</p><p>虽然考前真的认真学了很多初赛知识点，但是出了考场，选择题是一个没对，代码填空全对（那时候初赛还没改革）（大家都懵逼了，这真的不是点错技能点吗），头回就吃了闭门羹。</p><p>还好，一切都刚开始。</p><p>接下来的日子里，Uniya的日常变成了赶作业，晚上抽空去机房写题（x），每天在教学楼和综合楼来回奔波；寒假暑假的时候就和小伙伴们留在学校集训。集训的日子还是很有趣的！早上很早就起来，天都还没亮，到操场背书；白天坐在机房里写题；晚上在机房赶作业。</p><p>到了初三，NOIP因为政策原因取消了，改换为 CSP-J 2019；所幸，初赛还不错，将近90分的成绩足够入围复赛了（cmh就很惨，第一天通知入围，第二天通知分数线修改变成了未入围）；接下去，就是准备复赛了！</p><p>刷了百来道题目，打了几场模拟赛，发现自己还是好弱┭┮﹏┭┮</p><p>头回出远门，真不习惯（）看到了好多火车头</p><p><img src="../posts-img/oi-3.jpg" alt="oi-3" /></p><p>比赛前一天晚上，Joker_M指着我两台笔记本电脑大声吐槽：什么垃圾电脑，4399都玩不了= =</p><p>比赛那天上午，还特意敲了背包的模板来的！</p><p><img src="../posts-img/oi-2.jpg" alt="oi-2" /></p><p>结果上去就写了两个题然后弃疗。</p><p>下场之后发现最后一题T4是一个多重背包，还是一个原题！（场上没看出来当场晕厥┭┮﹏┭┮）喜提140分，普及二等跑路。</p><p>初中学习OI的日子就结束了，Uniya 匆匆忙忙的从机房跑回了教室，开始了中考的准备。</p><blockquote><p>记不得太清楚原话了，记得是在初二的寒假集训，我们几个在和坐班的钟老师边赶作业边聊天，他说：等到你们上了高中，上了大学，你们会发现你们的思维和现在又不一样了。</p><p>记得那时候对高中部的印象：怎么高中学习比初中还轻松哇</p><p>记得同学W在机房里看缘之空，然后隔壁的同学Z看得脸红用一只手挡住了</p><p>记得同学L在高中部集训的时候全屏看B站，结果被老校长抓了个正着QwQ</p><p>记得有个鬼才在机房里不能用QQ，然后就想出了局域网搭建网页聊天室的方法</p><p>…</p><p>前进的道路有各式各样的阻力，不过还好，坚持下去了。</p><p>“是阿，一条道走到黑”</p></blockquote><blockquote><p>左边的爪子是我的(●’◡’●)</p><p>怎么有人比赛完吃烧烤也能发疯QwQ</p><p>咳咳，是正常同学关系┭┮﹏┭┮各位要想歪了我也没办法┑(￣Д ￣)┍</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>红框框与蓝框框——C盘瘦身小技巧</title>
      <link href="/C-disk-thin/"/>
      <url>/C-disk-thin/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“（）难崩 修电脑修快十年了 第一次写这种教程”</p><p>“哈哈哈哈哈”</p><p>一台电脑，可以用上十几年而坚如磐石；但，没有一台电脑能逃得过C盘满仓定律！</p><p>事实上，大部分电脑的卡与慢，来自于磁盘文件碎片化和系统盘容量用尽：前者会使系统读取文件的速度减慢，后者会使系统的临时缓存文件无法存储，从而导致电脑卡顿。</p><p>虽然我们常说，重装电脑是解决电脑卡顿的最好办法，可理想是美好的，现实是残酷的——我们的电脑有许许多多的重要工作文件、聊天记录、工作环境。本期教程，我们会在不重装系统的条件下，完成C盘瘦身。</p></blockquote><blockquote><p>实验机：ASUS U31sd</p><p>配置：</p><p>CPU Intel Core i5-2410M </p><p>RAM 4GB DDR3 1600</p><p>SSD Teclast 128GB S550 ATA Device</p><p>System Windows 7 Ultimate x86_64</p><p><img src="/../posts-img/Disk-C-thin/1.png" alt="Picture1"></p><p>此为未瘦身之前磁盘容量</p></blockquote><h2 id="软件篇"><a href="#软件篇" class="headerlink" title="软件篇"></a>软件篇</h2><blockquote><p>也许你的电脑上，有许多的冗余的同类软件，其实不需要那么多个软件，只需要一个；也许你的电脑，所有的软件都安装在C盘上，我们其实可以专门用一个额外磁盘，比如说D盘，作为我们的软件盘，如此系统盘便不会冗余而繁杂。</p></blockquote><p>一、检查我们电脑上的软件目录：</p><p>开始菜单 -&gt; 控制面板 -&gt; 程序 -&gt; 卸载程序：</p><p>按着以下目录开始检查：</p><blockquote><p>媒体播放器：只需要留一个，建议留QQ影音 或者 Potplayer；</p><p>音乐播放：网易云音乐、QQ音乐、酷狗音乐；（可留可不留，或三者留其一）</p><p>浏览器：360安全浏览器 360极速浏览器；（推荐极速浏览器，广告较少；网银需要IE\极速双核；建议二者留其一，卸载时需要备份浏览器收藏夹）</p><p>网银、证券软件：重要，勿删；</p><p>打印机等驱动：重要，误删；</p><p>安全软件：360安全中心、360杀毒、腾讯管家、金山毒霸、江民软件、瑞星杀毒、火绒；（严重建议，只留其一，360杀毒和火绒优先选择；360安全中心过于臃肿；多个共存只会严重占用电脑内存，拖慢运行速度）</p><p>软件管家：360软件管家、腾讯软件管家（建议全部删除，下载时直接从官网处下载）</p><p>办公类软件：QQ 微信 WPS Office（建议不删）</p><p>压缩工具：360压缩、Winrar等等（建议只留一个压缩软件）</p></blockquote><p>二、迁移软件到D盘</p><p>首先是两个大头软件，QQ和微信，他们的数据存储在C盘个人文件夹中（My Document），极大的占用了C盘空间，我们可以把QQ和微信的数据转移到D盘。</p><p>在D盘先添加一个新的文件夹 命名为 Tencent File</p><p>QQ： 设置 -&gt; 基本设置 -&gt; 文件管理</p><p>在选择个人文件夹项，改为自定义（修改为刚才的目录，我的为D:\Tencent File）</p><p><img src="/../posts-img/Disk-C-thin/2.png" alt="Picture2"></p><p>此时系统弹出：</p><p><img src="/../posts-img/Disk-C-thin/3.png" alt="Picture3"></p><p>单击，是。</p><p>界面变为：</p><p><img src="/../posts-img/Disk-C-thin/4.png" alt="Picture4"></p><p>耐心等待迁移即可。</p><hr><p>在D盘先添加一个新的文件夹 命名为 Wechat File</p><p>微信：设置 -&gt; 文件管理 -&gt; 更改，然后选择刚刚添加的文件夹，然后出现提示：</p><p><img src="/../posts-img/Disk-C-thin/5.png" alt="Picture5"></p><p>耐心等待迁移即可。</p><hr><p>接下来，我们就对剩下的软件进行操刀：大部分操作都一致，提前备份软件，然后卸载软件，重新安装软件，把软件安装目录修改到D盘下，注意文件夹的建立，防止软件直接解压到根目录下，此处需要注意，只能修改的软件仅包括，媒体播放器、音乐播放器、WPS、下载软件（如百度网盘、迅雷）、解压缩软件，其他软件如（网银、证券、浏览器、安全软件、QQ、微信、驱动）不能执行此操作。</p><p>三、清理软件缓存</p><p>随着时间的延长，各软件运行后积累下越来越多的冗余的缓存，我们可以视情况清空，从而减小碎片文件。</p><p>1）删除个人目录内的临时文件</p><p>首先，在键盘上按下 Windows徽标键+R，打开运行窗口，输入 <strong>%temp%<strong>，点击</strong>回车</strong>；</p><p><img src="/../posts-img/Disk-C-thin/6.png" alt="Picture6"></p><p>此时，电脑上弹出temp文件夹，在键盘上按下 Ctrl+A 执行全选操作，然后 Shift+Delete 彻底删除临时文件。</p><p><img src="/../posts-img/Disk-C-thin/7.png" alt="Picture7"></p><p><img src="/../posts-img/Disk-C-thin/8.png" alt="Picture8"></p><p>2）删除系统目录内的临时文件</p><p>首先，在键盘上按下 Windows徽标键+R，打开运行窗口，输入 <strong>cleanmgr</strong>，点击<strong>回车</strong>；</p><p><img src="/../posts-img/Disk-C-thin/10.png" alt="Picture10"></p><p>弹出磁盘清理界面，选择C盘，确认；</p><p><img src="/../posts-img/Disk-C-thin/11.png" alt="Picture11"></p><p>分析后出现此界面，将所有内容全选，然后确定后删除文件。</p><p><img src="/../posts-img/Disk-C-thin/12.png" alt="Picture12"></p><p><img src="/../posts-img/Disk-C-thin/13.png" alt="Picture13"></p><p>3）使用清理软件进行清理</p><p>此处用到软件 CleanMaster.exe</p><p>下载后打开：</p><p><img src="/../posts-img/Disk-C-thin/15.png" alt="Picture15"></p><p>点击开始查找垃圾文件，等待搜索；搜索完成后出现以下界面，点击全选，然后按下清理文件。</p><p><img src="/../posts-img/Disk-C-thin/16.png" alt="Picture16"></p><h2 id="碎片篇"><a href="#碎片篇" class="headerlink" title="碎片篇"></a>碎片篇</h2><p>在刚才下载的软件内，找到 DefragMaster.exe，打开，出现如下界面：</p><p><img src="/../posts-img/Disk-C-thin/17.png" alt="Picture17"></p><p>单击C盘，按分析，而后整理，完成。</p><h2 id="文件篇"><a href="#文件篇" class="headerlink" title="文件篇"></a>文件篇</h2><p>1）桌面上的文件</p><p>将桌面上的文件移动到C盘，或将桌面储存文件的位置修改到D盘等。</p><p>前者容易操作，现在讲一下后者方法：</p><p>我们先在除C盘外的磁盘建立一个新文件夹，如我在E盘建立一个文件名为Desk的文件夹</p><p>打开计算机-&gt;C盘-&gt;用户（Users）-&gt; Xiangdong（用户名）如图：</p><p><img src="/../posts-img/Disk-C-thin/17.png" alt="Picture17"></p><p>右键桌面-&gt; 属性，调出如下菜单：</p><p><img src="/../posts-img/Disk-C-thin/18.png" alt="Picture18"></p><p>点击 位置，之后点击移动，选择我们刚刚建立的文件夹，然后确认移动。</p><p>等待文件迁移后，Desktop目录便已被迁移。</p><p>2）QQ、微信中的文件，见软件篇一。</p><p>完成上述步骤之后，现在我们就得到了一个蓝框框的C盘啦！</p><p>我们刚刚的实验机，除了软件没有移动，完成其他步骤之后，瘦身了10G有余。</p><p><img src="/../posts-img/Disk-C-thin/20.png" alt="Picture20"></p><hr><p>感谢您观看此处教程，如有不当之处，请指正。</p><p>本文所用软件附在下文，为Win7Master的阉割版。</p><p>下载:<a href="https://uniya.lanzoum.com/i0Thn0r3l5gd">https://uniya.lanzoum.com/i0Thn0r3l5gd</a> 密码:4jw1</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Trie树 学习笔记</title>
      <link href="/2021-2/oi-trie-tree-note/"/>
      <url>/2021-2/oi-trie-tree-note/</url>
      
        <content type="html"><![CDATA[<h2 id="Trie"><a href="#Trie" class="headerlink" title="Trie"></a>Trie</h2><p>构建字典树，相同路径合并即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Trie</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ch[Maxn*Maxlen][<span class="number">26</span>],end[Maxn*Maxlen],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span>* x)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(x);i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!ch[p][x[i]-<span class="string">&#x27;A&#x27;</span>]) ch[p][x[i]-<span class="string">&#x27;A&#x27;</span>]=++cnt;</span><br><span class="line">p=ch[p][x[i]-<span class="string">&#x27;A&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">end[p]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">char</span>* x)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(x);i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!ch[p][x[i]-<span class="string">&#x27;A&#x27;</span>]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">p=ch[p][x[i]-<span class="string">&#x27;A&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> end[p];</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="可持久化Trie"><a href="#可持久化Trie" class="headerlink" title="可持久化Trie"></a>可持久化Trie</h2><p>原理同主席树，建立多颗Trie树，对前一次版本的相同路径进行合并即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Trie</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ch[Maxn*Maxlen][<span class="number">2</span>],ver[Maxn*Maxlen],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> siz[Maxn*Maxlen];</span><br><span class="line"><span class="type">int</span> rt[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> now,<span class="type">int</span> last,<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=Maxlen;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">siz[now]+=<span class="number">1</span>;</span><br><span class="line">ver[now]=ver[last]+<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> t=(x&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!ch[now][t]) ch[now][t]=++cnt;</span><br><span class="line">now=ch[now][t];</span><br><span class="line">&#125;</span><br><span class="line">ver[now]=ver[last]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Find_Kth</span><span class="params">(<span class="type">int</span> now,<span class="type">int</span> last,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=Maxlen;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(k&gt;=siz[ch[now][<span class="number">1</span>]]-siz[ch[last][<span class="number">1</span>]])&#123;</span><br><span class="line">res+=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">now=ch[now][<span class="number">1</span>];</span><br><span class="line">last=ch[last][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">now=ch[now][<span class="number">0</span>];</span><br><span class="line">last=ch[last][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Find_Kth_Xor</span><span class="params">(<span class="type">int</span> now,<span class="type">int</span> last,<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=Maxlen;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="type">int</span> t=(x&gt;&gt;i)&amp;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(val[ch[now][!t]]-val[ch[last][!t]])&#123;</span><br><span class="line">res+=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">now=ch[now][!t];</span><br><span class="line">last=ch[last][!t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">now=ch[now][t];</span><br><span class="line">last=ch[last][t];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记 整除(数论)分块</title>
      <link href="/2021-2/oi-shulunfenkuai-note/"/>
      <url>/2021-2/oi-shulunfenkuai-note/</url>
      
        <content type="html"><![CDATA[<p>首先，让我们引入一个式子<br>$$<br>\sum_{i&#x3D;1}^{n}\lfloor\frac{n}{i}\rfloor (1\le n \le 10^8)<br>$$<br>看起来，似乎很简单？如果将值域改为$1\le n \le 1e12$呢？那么就需要用到我们今天的知识点了——数论分块</p><p>我们将每一个 $\lfloor \frac{n}{i} \rfloor$ 列出来：</p><p>令 $n&#x3D;9$</p><table><thead><tr><th>$i$</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td>$\lfloor\frac{n}{i}\rfloor$</td><td>9</td><td>4</td><td>3</td><td>2</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>发现了什么规律？区间$[5,9]$的值都为$1$</p><p>由此，我们便可以通过每一块值域相同的区间，来快速计算上面的式子</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1403</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">ll n,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(ll l=<span class="number">1</span>,r;l&lt;=n;l=r+<span class="number">1</span>)&#123;</span><br><span class="line">r=n/(n/l);</span><br><span class="line">ans+=(r-l+<span class="number">1</span>)*(n/l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每一块的区间左端点为$l$，则其区间右端点为$n&#x2F;(n&#x2F;l)$，这一段的值为$\lfloor \frac{n}{l} \rfloor$，时间复杂度为$O(\sqrt n)$</p><hr><h2 id="例1-P2261-CQOI2007-余数求和"><a href="#例1-P2261-CQOI2007-余数求和" class="headerlink" title="例1 P2261 [CQOI2007]余数求和"></a>例1 P2261 [CQOI2007]余数求和</h2><h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p>给出正整数 $n$ 和 $k$，求：<br>$$<br>G(n,k)&#x3D;\sum_{i&#x3D;1}^{n} k \mbox{ mod } i<br>$$<br>其中 $k$ mod $i$ 表示 $k$ 除以 $i$ 的余数。</p><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>首先我们将  $k$ mod $i$ 的形式换为更为简单的形式：<br>$$<br>G(n,k)&#x3D;\sum_{i&#x3D;1}^{n} k-\lfloor\frac{k}{i}\rfloor i<br>$$<br>然后我们将 $k$ 提出来，得到：<br>$$<br>G(n,k)&#x3D;nk-\sum_{i&#x3D;1}^{n} \lfloor\frac{k}{i}\rfloor i<br>$$<br>可以将  $\lfloor \frac{k}{i} \rfloor$ 拿出来分块，结束。</p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">ll n,k,ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld %lld&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">ans=n*k;</span><br><span class="line"><span class="keyword">for</span>(ll l=<span class="number">1</span>,r;l&lt;=n;l=r+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(k/l!=<span class="number">0</span>) r=<span class="built_in">min</span>(k/(k/l),n);</span><br><span class="line"><span class="keyword">else</span> r=n;</span><br><span class="line">ans-=(l+r)*(r-l+<span class="number">1</span>)/<span class="number">2</span>*(k/l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2424-约数和"><a href="#P2424-约数和" class="headerlink" title="P2424 约数和"></a>P2424 约数和</h2><h3 id="题目大意-1"><a href="#题目大意-1" class="headerlink" title="题目大意"></a>题目大意</h3><p>令$f(x)$ 表示 $x$ 所有约数之和，给定一个区间$[l,r]$，求：<br>$$<br>\sum_{i&#x3D;l}^{r}f(i)<br>$$</p><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>我们先从区间 [1,n] 看起，令 $n&#x3D;6$：</p><table><thead><tr><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td></td><td>2</td><td></td><td>2</td><td></td><td>2</td></tr><tr><td></td><td></td><td>3</td><td></td><td></td><td>3</td></tr><tr><td></td><td></td><td></td><td>4</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td>5</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td>6</td></tr></tbody></table><p>不难发现：<br>$$<br>\sum_{i&#x3D;1}^{n}f(i)&#x3D;\sum_{i&#x3D;1}^{n}\lfloor\frac{n}{i}\rfloor i<br>$$<br>对$\lfloor\frac{n}{i}\rfloor$分块即可，那么对于区间$[l,r]$便很简单了，通过前缀和来求出答案：<br>$$<br>\sum_{i&#x3D;1}^{r}\lfloor\frac{r}{i}\rfloor-\sum_{i&#x3D;1}^{l-1}\lfloor\frac{l-1}{i}\rfloor<br>$$</p><h3 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">ll X,Y;</span><br><span class="line">ll ans1,ans2;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld %lld&quot;</span>,&amp;X,&amp;Y);</span><br><span class="line">ans1=ans2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">1</span>,r;l&lt;=X<span class="number">-1</span>;l=r+<span class="number">1</span>)&#123;</span><br><span class="line">r=<span class="built_in">min</span>((X<span class="number">-1</span>)/((X<span class="number">-1</span>)/l),X<span class="number">-1</span>);</span><br><span class="line">ans1+=((X<span class="number">-1</span>)/l)*(l+r)*(r-l+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(ll l=<span class="number">1</span>,r;l&lt;=Y;l=r+<span class="number">1</span>)&#123;</span><br><span class="line">r=<span class="built_in">min</span>(Y/(Y/l),Y);</span><br><span class="line">ans2+=(Y/l)*(l+r)*(r-l+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans2-ans1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P6583-回首过去"><a href="#P6583-回首过去" class="headerlink" title="P6583 回首过去"></a>P6583 回首过去</h2><h3 id="题目大意-2"><a href="#题目大意-2" class="headerlink" title="题目大意"></a>题目大意</h3><p>给定正整数 $n$，求出有序整数对 $(x,y)$ 的个数，满足 $1\le x,y \le n$ 且 $\lfloor \frac{x}{y} \rfloor$ 可以表示为十进制有限小数。</p><h3 id="解题过程-2"><a href="#解题过程-2" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>Subtask 1</p><p>理解题意之后，我们很容易得出下面这个式子<br>$$<br>\sum_{i&#x3D;1}^{n} \sum_{j&#x3D;1}^{n} [i&#x3D;&#x3D;gcd(i,j)\cdot2^a5^b]<br>$$<br>其中$a,b$分别表示$i$中含有因数2,5的个数</p><p>直接暴力求解即可</p></li><li><p>Subtask 2</p><p>容易发现，对于 $i$ ，答案为$\lfloor \frac{n}{\frac{i}{2^a5^b}} \rfloor$，我们可得到<br>$$<br>\sum_{i&#x3D;1}^{n}\lfloor\frac{n}{\frac{i}{2^a5^b}}\rfloor<br>$$<br>其中$a,b$分别表示$i$中含有因数2,5的个数</p><p>根据式子求解即可</p></li><li><p>Subtask 3</p><p>我们将公式化简一下，可以得到<br>$$<br>\sum^{n}_{i&#x3D;1}\lfloor\frac{2^a5^bn}{i}\rfloor<br>$$<br>其中$a,b$分别表示$i$中含有因数2,5的个数</p><p>有没有看到熟悉的东西？接下来我们将 $2^a5^b$提出来，得到<br>$$<br>\sum_{a&#x3D;0}^{40}\sum_{b&#x3D;0}^{20}\sum_{i&#x3D;1}^{2^a5^bi\le n}\lfloor\frac{n}{i}\rfloor\cdot[i%2!&#x3D;0\mbox{ and }i%5!&#x3D;0]<br>$$<br>$i$中此时不含因数$2,5$</p><p>我们来思考一下怎么将最外面两层循环替换掉：</p><p>我们固定 $i$ ，对于 $i$ 有$1\le2^a5^bi\le n$ 即$1\le 2^a5^b\le \lfloor\frac{n}{i}\rfloor$ ，所以我们只需要对 $i$ 求出在 $[1,\lfloor\frac{n}{i}\rfloor]$ 内所有形如$2^a5^b$的的个数，我们令$f(x)$表示 $[1,x]$ 内所有形如$2^a5^b$的个数，式子转化为：<br>$$<br>\sum_{i&#x3D;1}^{n}f(\lfloor\frac{n}{i}\rfloor)\cdot\lfloor\frac{n}{i}\rfloor\cdot[i%2!&#x3D;0\mbox{ and }i%5!&#x3D;0]<br>$$<br>至于 $f(x)$ 如何去求呢？</p><p>我们通过简单的计算，可得在 $[1,10^{12}]$ 内，形如 $2^a5^b$ 的数共有371个。</p><p>所以我们将每一个形如$2^a5^b$数字存入数组，进行排序，利用二分查找位置即可得到答案。</p><p>接下来我们对 $\lfloor\frac{n}{i}\rfloor$ 进行分块，设 $\lfloor\frac{n}{i}\rfloor$ 相同的区间为$[l,r]$</p><p>我们看到后面：$[i%2!&#x3D;0\mbox{ and }i%5!&#x3D;0]$ </p><p>在 $[l,r]$ 中 $i$ 并不是连续的！考虑容斥</p><p>老样子，我们先讨论 $[1,n]$ 中的不含 $2,5$ 倍数的数字之和</p><p>对于 $2$ 的倍数，我们很容易得到个数 $n&#x2F;2$</p><p>对于 $5$ 的倍数，我们很容易得到个数 $n&#x2F;5$</p><p>但是 有些数字既是 $2$ 的倍数 又是 $5$ 的倍数，直接减去，会将这一部分多减一次，我们要加回来，即加上这两个数字的最小公倍数$lcm(2,5)&#x3D;10$的倍数个数 $n&#x2F;10$</p><p>最后得到 $[1,n]$ 中不含 $2,5$ 的倍数数字之和：<br>$$<br>G(1,n)&#x3D;n-\frac{n}{2}-\frac{n}{5}+\frac{n}{10}<br>$$<br> $G(1,x)$ 表示 $[1,x]$ 中不含 $2,5$ 的倍数数字之和</p><p>那么求 $G(l,r)$ 也很简单了，通过前缀和计算答案：<br>$$<br>G(l,r)&#x3D;G(1,r)-G(1,l-1)<br>$$<br>所以最后每一块 $[l,r]$ 的答案就是<br>$$<br>G(l,r)\cdot\lfloor\frac{n}{i}\rfloor\cdot f(\lfloor \frac{n}{i} \rfloor)<br>$$</p></li></ul><h3 id="源代码-2"><a href="#源代码-2" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> ll Maxn=<span class="number">1e12</span>+<span class="number">5</span>;</span><br><span class="line">ll a[<span class="number">1000</span>],cnt=<span class="number">0</span>;</span><br><span class="line">ll n;</span><br><span class="line"><span class="function">ll <span class="title">F</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">upper_bound</span>(a+<span class="number">1</span>, a+<span class="number">1</span>+cnt,x)-a<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">G</span><span class="params">(ll l,ll r)</span></span>&#123;</span><br><span class="line">ll res=r-l+<span class="number">1</span>;</span><br><span class="line">res-=(r/<span class="number">2</span>)-(l<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">res-=(r/<span class="number">5</span>)-(l<span class="number">-1</span>)/<span class="number">5</span>;</span><br><span class="line">res+=(r/<span class="number">10</span>)-(l<span class="number">-1</span>)/<span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=Maxn;i*=<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(ll j=i;j&lt;=Maxn;j*=<span class="number">5</span>)&#123;</span><br><span class="line">a[++cnt]=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+cnt);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(ll l=<span class="number">1</span>,r;l&lt;=n;l=r+<span class="number">1</span>)&#123;</span><br><span class="line">r=n/(n/l);</span><br><span class="line">ans+=<span class="built_in">F</span>(n/l)*(n/l)*<span class="built_in">G</span>(l,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//特别注意，此处的F(x)同上文的f(x)，G(l,r)同上文的G(l,r)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>P2542 [AHOI2005] 航线规划 题解</title>
      <link href="/2021-2/oi-luogu-p2542/"/>
      <url>/2021-2/oi-luogu-p2542/</url>
      
        <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给定一个无向图，有以下两个操作：</p><ul><li>删除一条边</li><li>查询两点间所有路径中，桥的数量和</li></ul><p><a href="https://www.luogu.com.cn/problem/P2542">题目链接</a></p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><p>按题意模拟，复杂度非常大，不可行。</p><p>我们考虑离线操作的方式：先将已经完成所有的删边操作的图建好，此时我们可以发现，这个图中仅存在着有桥和无桥的两种情况。考虑求解边双联通分量的缩点，最终得到一颗树，设边权为1，树上两点之间简单路径的边权和即为我们第二个操作的答案。</p><p>接着我们倒序执行操作，将删边改为加边，容易发现，我们加上一条边$(u,v)$：</p><ul><li><p>如果点$u$和点$v$已经成为新图中的同一个点，那么点$u$和点$v$之间路径数大于1条，点$u$和点$v$之间不存在桥</p></li><li><p>如果点$u$和点$v$属于新图中两个不同的点，那么加上边后点$u$和点$v$之间路径数为2条，点u和点v之间不存在桥，点$u$和点$v$之间的边权全部清零</p><ul><li>未加边前，点$u$和点$v$简单路径内的点只有一条路径可走，加边后，有两条路可走，答案变为0</li><li>加边后，点$u$和点$v$原先简单路径外的点，经过点$u$和点$v$这条路径已不属于桥，答案需要减去点$u$和点$v$这条路径点长度</li><li>请读者在纸上演示这段过程</li></ul></li></ul><p>我们可以使用轻重链剖分+线段树维护这一过程，建立新图我们先使用Tarjan求桥，再通过染色求边双联通分量，进行缩点。</p><h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">3e4</span>+<span class="number">5</span>,Maxm=<span class="number">5e5</span>+<span class="number">5</span>,MaxQ=<span class="number">4e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> p=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(p&lt;<span class="string">&#x27;0&#x27;</span>||p&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+p-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">map&lt;pair&lt;<span class="type">int</span> ,<span class="type">int</span> &gt;,<span class="type">int</span> &gt; Graph;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Query</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> op,u,v,ans;</span><br><span class="line">&#125;Q[MaxQ];</span><br><span class="line"><span class="type">int</span> cnt_Q=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add_Query</span><span class="params">(<span class="type">int</span> op,<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">Q[++cnt_Q]=(Query)&#123;op,u,v,<span class="number">0</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line"><span class="type">int</span> u,v;</span><br><span class="line">&#125;G[Maxm];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>&#123;</span><br><span class="line"><span class="type">int</span> u,v,next;</span><br><span class="line">&#125;e[Maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> head[Maxn],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">e[++cnt]=(Edge)&#123;u,v,head[u]&#125;;</span><br><span class="line">head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dfn[Maxn],low[Maxn],num=<span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> bridge[Maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Tarjan</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> in_edge)</span></span>&#123;</span><br><span class="line">dfn[x]=low[x]=++num;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x];~i;i=e[i].next)&#123;</span><br><span class="line"><span class="type">int</span> y=e[i].v;</span><br><span class="line"><span class="keyword">if</span>(!dfn[y])&#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(y,i);</span><br><span class="line">low[x]=<span class="built_in">min</span>(low[x],low[y]);</span><br><span class="line"><span class="keyword">if</span>(low[y]&gt;dfn[x])&#123;</span><br><span class="line">bridge[i]=bridge[i^<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i!=(in_edge^<span class="number">1</span>))&#123;</span><br><span class="line">low[x]=<span class="built_in">min</span>(low[x],dfn[y]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> col[Maxn],dcc=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs_eDcc</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">col[x]=dcc;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x];~i;i=e[i].next)&#123;</span><br><span class="line"><span class="type">int</span> y=e[i].v;</span><br><span class="line"><span class="keyword">if</span>(col[y]||bridge[i]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs_eDcc</span>(y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dep[Maxn],fa[Maxn],son[Maxn],siz[Maxn],val[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs_Tree</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> Fa)</span></span>&#123;</span><br><span class="line">dep[x]=dep[Fa]+<span class="number">1</span>;</span><br><span class="line">fa[x]=Fa;</span><br><span class="line">siz[x]=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> maxson=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x];~i;i=e[i].next)&#123;</span><br><span class="line"><span class="type">int</span> y=e[i].v;</span><br><span class="line"><span class="keyword">if</span>(y==Fa)&#123;</span><br><span class="line">val[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs_Tree</span>(y,x);</span><br><span class="line">siz[x]+=siz[y];</span><br><span class="line"><span class="keyword">if</span>(maxson&lt;siz[y])&#123;</span><br><span class="line">maxson=siz[y];</span><br><span class="line">son[x]=y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> top[Maxn],Dfn[Maxn],idx=<span class="number">0</span>,Val[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs_Tree2</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> Top)</span></span>&#123;</span><br><span class="line">top[x]=Top;</span><br><span class="line">Dfn[x]=++idx;</span><br><span class="line">Val[idx]=val[x];</span><br><span class="line"><span class="keyword">if</span>(!son[x]) <span class="keyword">return</span> ;</span><br><span class="line"><span class="built_in">dfs_Tree2</span>(son[x],Top);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x];~i;i=e[i].next)&#123;</span><br><span class="line"><span class="type">int</span> y=e[i].v;</span><br><span class="line"><span class="keyword">if</span>(y==fa[x]||y==son[x]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs_Tree2</span>(y,y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">SegmentTree</span>&#123;</span><br><span class="line"><span class="type">int</span> l,r,dat,lazy;</span><br><span class="line"><span class="comment">//#define l(x) Tree[x].l</span></span><br><span class="line"><span class="comment">//#define r(x) Tree[x].r</span></span><br><span class="line"><span class="comment">//#define dat(x) Tree[x].dat</span></span><br><span class="line"><span class="comment">//#define lazy(x) Tree[x].lazy</span></span><br><span class="line">&#125;Tree[Maxn&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> p)</span></span>&#123;</span><br><span class="line">Tree[p].dat=Tree[p&lt;&lt;<span class="number">1</span>].dat+Tree[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].dat;</span><br><span class="line"><span class="comment">//dat(p)=dat(p&lt;&lt;1)+dat(p&lt;&lt;1|1);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">Tree[p].l=l;Tree[p].r=r;Tree[p].lazy=<span class="number">-1</span>;</span><br><span class="line"><span class="comment">//l(p)=l;r(p)=r;lazy(p)=-1;</span></span><br><span class="line"><span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">Tree[p].dat=Val[l];</span><br><span class="line"><span class="comment">//dat(p)=Val[l];</span></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(p&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line"><span class="built_in">build</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">spread</span><span class="params">(<span class="type">int</span> p)</span></span>&#123;</span><br><span class="line"><span class="comment">/*if(lazy(p)!=-1)&#123;</span></span><br><span class="line"><span class="comment">dat(p&lt;&lt;1)=(r(p&lt;&lt;1)-l(p&lt;&lt;1)+1)*lazy(p);</span></span><br><span class="line"><span class="comment">dat(p&lt;&lt;1|1)=(r(p&lt;&lt;1|1)-l(p&lt;&lt;1|1)+1)*lazy(p);</span></span><br><span class="line"><span class="comment">lazy(p&lt;&lt;1)=lazy(p&lt;&lt;1|1)=lazy(p);</span></span><br><span class="line"><span class="comment">lazy(p)=-1;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">if</span>(Tree[p].lazy!=<span class="number">-1</span>)&#123;</span><br><span class="line">Tree[p&lt;&lt;<span class="number">1</span>].dat=(Tree[p&lt;&lt;<span class="number">1</span>].r-Tree[p&lt;&lt;<span class="number">1</span>].l+<span class="number">1</span>)*Tree[p].lazy;</span><br><span class="line">Tree[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].dat=(Tree[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].r-Tree[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].l+<span class="number">1</span>)*Tree[p].lazy;</span><br><span class="line">Tree[p&lt;&lt;<span class="number">1</span>].lazy=Tree[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lazy=Tree[p].lazy;</span><br><span class="line">Tree[p].lazy=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> L,<span class="type">int</span> R,<span class="type">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L&gt;R) <span class="keyword">return</span> ;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=Tree[p].l&amp;&amp;Tree[p].r&lt;=R)&#123;</span><br><span class="line"><span class="comment">//dat(p)=(r(p)-l(p)+1)*d;</span></span><br><span class="line"><span class="comment">//lazy(p)=d;</span></span><br><span class="line">Tree[p].dat=(Tree[p].r-Tree[p].l+<span class="number">1</span>)*d;</span><br><span class="line">Tree[p].lazy=d;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">spread</span>(p);</span><br><span class="line"><span class="type">int</span> mid=(Tree[p].l+Tree[p].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=mid)&#123;</span><br><span class="line"><span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>,L,R,d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(R&gt;mid)&#123;</span><br><span class="line"><span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,L,R,d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushup</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> L,<span class="type">int</span> R)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L&gt;R) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=Tree[p].l&amp;&amp;Tree[p].r&lt;=R)&#123;</span><br><span class="line"><span class="keyword">return</span> Tree[p].dat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">spread</span>(p);</span><br><span class="line"><span class="type">int</span> mid=(Tree[p].l+Tree[p].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=mid)&#123;</span><br><span class="line">res+=<span class="built_in">ask</span>(p&lt;&lt;<span class="number">1</span>,L,R);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(R&gt;mid)&#123;</span><br><span class="line">res+=<span class="built_in">ask</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,L,R);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Change_SP</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line"><span class="comment">//if(u==v) return ;</span></span><br><span class="line"><span class="keyword">while</span>(top[u]!=top[v])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[top[u]]&lt;dep[top[v]]) <span class="built_in">swap</span>(u,v);</span><br><span class="line"><span class="built_in">update</span>(<span class="number">1</span>,Dfn[top[u]],Dfn[u],<span class="number">0</span>);</span><br><span class="line">u=fa[top[u]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[u]&gt;dep[v]) <span class="built_in">swap</span>(u,v);</span><br><span class="line"><span class="built_in">update</span>(<span class="number">1</span>,Dfn[u]+<span class="number">1</span>,Dfn[v],<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Query_SP</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line"><span class="comment">//if(u==v) return 0;</span></span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(top[u]!=top[v])&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[top[u]]&lt;dep[top[v]]) <span class="built_in">swap</span>(u,v);</span><br><span class="line">res+=<span class="built_in">ask</span>(<span class="number">1</span>,Dfn[top[u]],Dfn[u]);</span><br><span class="line">u=fa[top[u]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[u]&gt;dep[v]) <span class="built_in">swap</span>(u,v);</span><br><span class="line">res+=<span class="built_in">ask</span>(<span class="number">1</span>,Dfn[u]+<span class="number">1</span>,Dfn[v]);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">n=<span class="built_in">read</span>();m=<span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="type">int</span> u=<span class="built_in">read</span>(),v=<span class="built_in">read</span>();</span><br><span class="line">G[i]=(edge)&#123;u,v&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> op;</span><br><span class="line"><span class="keyword">while</span>(op!=<span class="number">-1</span>)&#123;</span><br><span class="line">op=<span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="type">int</span> u=<span class="built_in">read</span>(),v=<span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">add_Query</span>(op,u,v);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">0</span>) Graph[<span class="built_in">make_pair</span>(<span class="built_in">min</span>(u,v),<span class="built_in">max</span>(v,u))]++;</span><br><span class="line">&#125;</span><br><span class="line">cnt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(Graph.<span class="built_in">find</span>(<span class="built_in">make_pair</span>(<span class="built_in">min</span>(G[i].u,G[i].v),<span class="built_in">max</span>(G[i].u,G[i].v)))!=Graph.<span class="built_in">end</span>()&amp;&amp;Graph[<span class="built_in">make_pair</span>(<span class="built_in">min</span>(G[i].u,G[i].v),<span class="built_in">max</span>(G[i].u,G[i].v))])&#123;</span><br><span class="line">Graph[<span class="built_in">make_pair</span>(<span class="built_in">min</span>(G[i].u,G[i].v),<span class="built_in">max</span>(G[i].u,G[i].v))]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">add</span>(G[i].u,G[i].v);<span class="built_in">add</span>(G[i].v,G[i].u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!dfn[i]) <span class="built_in">Tarjan</span>(i,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!col[i])&#123;</span><br><span class="line">dcc++;</span><br><span class="line"><span class="built_in">dfs_eDcc</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Graph.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line"><span class="type">int</span> u=e[i].v,v=e[i^<span class="number">1</span>].v;</span><br><span class="line"><span class="keyword">if</span>(col[u]==col[v]) <span class="keyword">continue</span>;</span><br><span class="line">Graph[<span class="built_in">make_pair</span>(<span class="built_in">min</span>(col[u],col[v]),<span class="built_in">max</span>(col[u],col[v]))]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> it=Graph.<span class="built_in">begin</span>();it!=Graph.<span class="built_in">end</span>();it++)&#123;</span><br><span class="line">pair&lt;pair&lt;<span class="type">int</span> ,<span class="type">int</span> &gt;,<span class="type">int</span> &gt; p=*it;</span><br><span class="line"><span class="keyword">if</span>(!p.second) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(p.first.first,p.first.second);</span><br><span class="line"><span class="built_in">add</span>(p.first.second,p.first.first);</span><br><span class="line"><span class="comment">//printf(&quot;%d %d\n&quot;,p.first.first,p.first.second);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs_Tree</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">dfs_Tree2</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,dcc);</span><br><span class="line"><span class="comment">// printf(&quot;---\n&quot;);</span></span><br><span class="line"><span class="comment">// printf(&quot;# point #col #siz #Dfn #Top #son #fa #dep #val\n&quot;);</span></span><br><span class="line"><span class="comment">// for(int i=1;i&lt;=dcc;i++)&#123;</span></span><br><span class="line"><span class="comment">// printf(&quot;%d %d %d %d %d %d %d %d %d\n&quot;,i,col[i],siz[i],Dfn[i],top[i],son[i],fa[i],dep[i],Val[i]);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// for(int i=1;i&lt;=9;i++)&#123;</span></span><br><span class="line"><span class="comment">// printf(&quot;%d %d %d %d\n&quot;,Tree[i].l,Tree[i].r,Tree[i].dat,Tree[i].lazy);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// printf(&quot;%d\n&quot;,ask(1,1,4));</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=cnt_Q;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(Q[i].op==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//cout&lt;&lt;col[Q[i].u]&lt;&lt;&quot; &quot;&lt;&lt;col[Q[i].v]&lt;&lt;endl;</span></span><br><span class="line"><span class="built_in">Change_SP</span>(col[Q[i].u],col[Q[i].v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Q[i].op==<span class="number">1</span>)&#123;</span><br><span class="line">Q[i].ans=<span class="built_in">Query_SP</span>(col[Q[i].u],col[Q[i].v]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt_Q;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(Q[i].op==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, Q[i].ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>属于是几个模板凑一起的题，我重构了3次，最后调bug定位到线段树…挺麻烦的。</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NOI Linux 2.0 不完全食用指南</title>
      <link href="/2021-2/noilinux2/"/>
      <url>/2021-2/noilinux2/</url>
      
        <content type="html"><![CDATA[<h1 id="NOI-Linux-2-0-不完全食用指南"><a href="#NOI-Linux-2-0-不完全食用指南" class="headerlink" title="NOI Linux 2.0 不完全食用指南"></a>NOI Linux 2.0 <del>不完全</del>食用指南</h1><p>Date: 2021-9-25 Author: 杳鸢</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><a href="https://noi.cn/gynoi/jsgz/2021-07-16/732450.shtml">链接地址</a></p><p>随着 NOI 官网对 NOI Linux 版本的更新，我们迎来了一个新的、与先前 1.4 版本完全不同的 NOI Linux；也正因为新版本的实用性更高了，所以不确定考场上会将 NOI Linux 从虚拟机中拉出来，变成实体机的操作系统。</p><p>NOI 竞赛大纲中，对提高组的要求包括Linux操作；CSP-S 2021 初赛的试题中，第一题便考察了Linux常用命令之一<code>ls</code>。</p><p>本篇文章将会向具有一定实践能力、能够通过搜索引擎解决简单问题的读者，详细介绍 NOI Linux 2.0 的安装与介绍、Linux下常用的命令与竞赛环境应用。</p><p>感谢读者您的耐心阅读，若有错误，请在下方评论区提出或发送电邮告知笔者。</p></blockquote><h2 id="在虚拟机下的安装"><a href="#在虚拟机下的安装" class="headerlink" title="在虚拟机下的安装"></a>在虚拟机下的安装</h2><blockquote><p>使用的是笔者的新笔记本电脑，配置如下</p><p>Lenovo ThinkPad T14s AMD Gen 1</p><p>CPU: AMD Ryzen 7 Pro 4750u 8C&#x2F;16T</p><p>RAM: DDR4 3200 On-board 16GB</p><p>SSD: WDC PC SN730 512GB Pci-e 3</p><p>GPU: AMD Radeon Graphics</p><p>WLAN: Intel WIFI 6 AX200</p><p>LED: 14” 1920*1080 </p></blockquote><h3 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h3><blockquote></blockquote><h3 id="Linux-Arch-Linux"><a href="#Linux-Arch-Linux" class="headerlink" title="Linux (Arch Linux)"></a>Linux (Arch Linux)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">                  -`                    zixuan@zixuan </span><br><span class="line">                 .o+`                   ------------- </span><br><span class="line">                `ooo/                   OS: Arch Linux x86_64 </span><br><span class="line">               `+oooo:                  Host: 20UH0008CD ThinkPad T14s Gen 1 </span><br><span class="line">              `+oooooo:                 Kernel: 5.14.2-arch1-2 </span><br><span class="line">              -+oooooo+:                Uptime: 10 hours, 7 mins </span><br><span class="line">            `/:-:++oooo+:               Packages: 910 (pacman) </span><br><span class="line">           `/++++/+++++++:              Shell: bash 5.1.8 </span><br><span class="line">          `/++++++++++++++:             Resolution: 1920x1080 </span><br><span class="line">         `/+++ooooooooooooo/`           DE: GNOME 40.4 </span><br><span class="line">        ./ooosssso++osssssso+`          WM: Mutter </span><br><span class="line">       .oossssso-````/ossssss+`         WM Theme: Arc-Lighter </span><br><span class="line">      -osssssso.      :ssssssso.        Theme: Arc-Lighter [GTK2/3] </span><br><span class="line">     :osssssss/        osssso+++.       Icons: Arc [GTK2/3] </span><br><span class="line">    /ossssssss/        +ssssooo/-       Terminal: gnome-terminal </span><br><span class="line">  `/ossssso+/:-        -:/+osssso+-     CPU: AMD Ryzen 7 PRO 4750U with Radeon </span><br><span class="line"> `+sso+:-`                 `.-/+oso:    GPU: AMD ATI 06:00.0 Renoir </span><br><span class="line">`++:.                           `-/+/   Memory: 13301MiB / 13707Mi3B </span><br><span class="line">.`                                 `/</span><br></pre></td></tr></table></figure><blockquote><p>Linux环境如上，使用著名的开源虚拟机软件 Oracle VM VirtualBox </p></blockquote><ul><li><p>安装 VirtualBox</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Arch Linux</span></span><br><span class="line">$ pacman -S virtualbox-host-modules-arch //安装基础包</span><br><span class="line">$ yaourt -S virtualbox-ext-oracle //安装扩展包</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu/Debian</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian &lt;mydist&gt; contrib&quot;</span> &gt;&gt; /etc/apt/sources.list //将mydist改为你的发行版名称</span><br><span class="line">$ sudo apt-key add oracle_vbox_2016.asc //适用于 Debian8 Ubuntu 16.04 或之后的版本</span><br><span class="line">$ sudo apt-key add oracle_vbox.asc //适用于 Debian8 Ubuntu 16.04 之前的版本</span><br><span class="line">$ sudo apt-get update //更新</span><br><span class="line">$ sudo apt-get install virtualbox-6.1 //安装基础包</span><br><span class="line">$ sudo apt-get install virtualbox-ext-pack //安装扩展包</span><br></pre></td></tr></table></figure></li><li><p>打开 VirtualBox 主界面，配置虚拟机</p><img src="/home/zixuan/Documents/Blog/images/NOILinux-1.png" alt="NOILinux-1" style="zoom: 67%;" /><ul><li><p>1.点击「新建」按钮</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-2.png" alt="NOILinux-2"></p><ul><li>「名称」根据自己的需求填写，建议使用英文字符，以防未知错误</li><li>「文件夹」按照默认位置即可，如有需要自行修改</li><li>「类型」选择 <code>Linux</code></li><li>「版本」选择 <code>Ubuntu (64-bit)</code> ，NOI Linux 2.0版本是在 Ubuntu 20.04 LTS 版本上客制化的，根本上仍属于 Ubuntu 系统；切勿选择 <code>32bit</code></li><li>检查无误后，点击「下一步」</li></ul></li><li><p>2.分配内存大小</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-3.png" alt="NOILinux-3"></p><ul><li>调整为 <code>2048MB</code> ，在这里建议读者，如果主机有足够的空闲内存，分配给虚拟机 <code>4096MB</code> 的内存大小</li><li>检查无误后，点击「下一步」</li></ul></li><li><p>3.创建虚拟硬盘</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-4.png" alt="NOILinux-4"></p><ul><li>选择「现在创建虚拟硬盘」</li><li>检查无误后，点击「创建」</li></ul></li><li><p>4.选择虚拟硬盘文件类型</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-5.png" alt="NOILinux-5"></p><ul><li>选择「VDI (VirtualBox 磁盘映像)」</li><li>检查无误后，点击「下一步」</li></ul></li><li><p>5.选择虚拟硬盘分配方式</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-6.png" alt="NOILinux-6"></p><ul><li>此处应根据读者自己的实际情况选择，这里笔者选择「固定大小」</li><li>检查无误后，点击「下一步」</li></ul></li><li><p>6.选择文件位置和大小</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-7.png"></p><ul><li>虚拟硬盘文件位置根据默认位置即可，无需改动</li><li>虚拟硬盘的大小，这里笔者调整为 <code>20GB</code> ，读者可根据自己的实际情况调整，建议不少于 <code>20GB</code></li><li>检查无误后，点击「创建」</li></ul></li><li><p>7.在主界面点击设置</p><img src="/home/zixuan/Documents/Blog/images/NOILinux-8.png" style="zoom:67%;" /><ul><li><p>常规-&gt;高级</p><p>更改「共享粘贴板」为「双向」</p><p>更改「拖放」为「双向」</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-9.png" alt="NOILinux-9"></p></li><li><p>系统-&gt;处理器</p><p>这里笔者将处理器数量调整为 <code>4</code>，并启用了所有的扩展特性</p><p>建议读者根据自己的实际情况自行调整，建议处理器数量不少于 <code>2</code></p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-10.png" alt="NOILinux-10"></p></li><li><p>系统-&gt;硬件加速</p><p>这里笔者使用 <code>KVM</code> 半虚拟化接口，并启用了嵌套分页</p><p>建议读者根据自己的实际情况调整，或采用默认选项</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-11.png" alt="NOILinux-11"></p></li><li><p>显示-&gt;屏幕</p><p>这里笔者将显存大小调整为 <code>128MB</code> ，建议读者根据自己的实际情况调整</p><p>如果是集成显卡，不建议启用「3D加速」选项，会导致卡顿</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-12.png" alt="NOILinux-12"></p></li><li><p>储存</p><p>此处需要挂载我们提前在官网下载好的镜像文件 <code>ubuntu-noi-v2.0.iso</code></p><ul><li><p>打开光盘图标，点击「选择虚拟盘」</p><p><img src="/home/zixuan/Documents/Blog/images/NOILinux-13.png" alt="NOILinux-13"></p></li><li><p>在弹出的文件管理界面单击镜像文件，然后点击「打开」</p><img src="/home/zixuan/Documents/Blog/images/NOILinux-14.png" alt="NOILinux-14" style="zoom: 67%;" /></li></ul></li><li><p>检查无误后，点击「确定」</p></li></ul></li></ul></li><li><p>安装 NOI Linux</p><ul><li><p>在主界面启动虚拟机</p><p>  启动后界面应当如下</p><p>  <img src="/home/zixuan/Documents/Blog/images/NOILinux-15.png" alt="NOILinux-15"></p></li><li><p>选择语言</p><p>  滚动至最底，选择「中文(简体)」或「中文(繁体)」</p><p>  点击「安装 Ubuntu」</p></li><li><p>键盘布局</p><p>  <img src="/home/zixuan/Documents/Blog/images/NOILinux-16.png" alt="NOILinux-16"></p><p>  点击探测键盘布局</p><p>  测试完成后，点击「继续」</p></li><li><p>更新和其他软件</p><p>  此处选择「正常安装」</p><p>  建议关闭「安装Ubuntu时下载更新」</p><p>  无需开启「为图形或无线硬件，以及其他媒体格式安装第三方软件」</p><p>  检查无误后，点击「继续」</p><p>  <img src="/home/zixuan/Documents/Blog/images/NOILinux-17.png" alt="NOILinux-17"></p></li><li></li></ul></li></ul><h2 id="在实体机上的安装"><a href="#在实体机上的安装" class="headerlink" title="在实体机上的安装"></a>在实体机上的安装</h2><blockquote><p>笔者的旧笔记本电脑有一定的年头了，大概是10年的机龄，配置如下</p><p>HP Compaq 2230s</p><p>CPU: Intel Core 2 Duo P8800 2.66 GHz 2C&#x2F;2T</p><p>RAM: DDR2 SO-DIMM 800 2G*2</p><p>SSD: SAMSUNG CM871 TLC 192GB</p><p>GPU: Intel GMA X4500HD</p><p>WLAN: Intel WIFI Link 5100 AGN</p><p>LCD: 12.1” 1280*800</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>取消TrackPoint中键粘贴功能</title>
      <link href="/2021-2/trackpoint-mid-key-modify/"/>
      <url>/2021-2/trackpoint-mid-key-modify/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我的 ThinkPad 在 Linux 下的 TrackPoint 中键具有粘贴功能</p><p>由于中键配合指点杆用于滚动屏幕，滚动代码时会将代码搞乱，烦死了&gt;_&lt;</p><p>这里使用了 Ubuntu Wiki 的解决方案 <a href="https://wiki.ubuntu.com/X/Config/Input#Example:%20Disabling%20middle-mouse%20button%20paste%20on%20a%20scrollwheel%20mouse">链接</a></p></blockquote><h2 id="查询鼠标设备"><a href="#查询鼠标设备" class="headerlink" title="查询鼠标设备"></a>查询鼠标设备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ xinput list | grep <span class="string">&#x27;id=&#x27;</span></span><br><span class="line">⎡ Virtual core pointer                    <span class="built_in">id</span>=2[master pointer  (3)]</span><br><span class="line">⎜   ↳ Virtual core XTEST pointer              <span class="built_in">id</span>=4[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ ETPS/2 Elantech TrackPoint              <span class="built_in">id</span>=12[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ ETPS/2 Elantech Touchpad                <span class="built_in">id</span>=13[slave  pointer  (2)]</span><br><span class="line">⎣ Virtual core keyboard                   <span class="built_in">id</span>=3[master keyboard (2)]</span><br><span class="line">    ↳ Virtual core XTEST keyboard             <span class="built_in">id</span>=5[slave  keyboard (3)]</span><br><span class="line">    ↳ Power Button                            <span class="built_in">id</span>=6[slave  keyboard (3)]</span><br><span class="line">    ↳ Video Bus                               <span class="built_in">id</span>=7[slave  keyboard (3)]</span><br><span class="line">    ↳ Power Button                            <span class="built_in">id</span>=8[slave  keyboard (3)]</span><br><span class="line">    ↳ Sleep Button                            <span class="built_in">id</span>=9[slave  keyboard (3)]</span><br><span class="line">    ↳ Integrated Camera: Integrated C         <span class="built_in">id</span>=10[slave  keyboard (3)]</span><br><span class="line">    ↳ AT Translated Set 2 keyboard            <span class="built_in">id</span>=11[slave  keyboard (3)]</span><br><span class="line">    ↳ ThinkPad Extra Buttons                  <span class="built_in">id</span>=14[slave  keyboard (3)]</span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>这里可以找到我的ThinkPad的 TrackPonit 名字 <code>ETPS/2 Elantech TrackPoint </code>，请在这一步找到你的设备名称或者设备id号</p></blockquote><h2 id="获取鼠标按钮映射"><a href="#获取鼠标按钮映射" class="headerlink" title="获取鼠标按钮映射"></a>获取鼠标按钮映射</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ xinput get-button-map &lt;Device-<span class="built_in">id</span>&gt;</span><br><span class="line">$ xinput get-button-map &lt;Device-name&gt;</span><br><span class="line">1 2 3 4 5 6 7</span><br></pre></td></tr></table></figure><blockquote><p>查询命令二者选其一</p><p>前三个分别是 左键 中键 右键</p></blockquote><h2 id="修改鼠标按钮映射"><a href="#修改鼠标按钮映射" class="headerlink" title="修改鼠标按钮映射"></a>修改鼠标按钮映射</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xinput set-button-map &lt;Device-<span class="built_in">id</span>/Device-name&gt; 1 0 3</span><br></pre></td></tr></table></figure><blockquote><p>0表示将中键功能取消</p><p>这样就可以完美使用了！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>夜谈2021/09/03</title>
      <link href="/2021-2/nt-2021-09-03/"/>
      <url>/2021-2/nt-2021-09-03/</url>
      
        <content type="html"><![CDATA[<h1 id="Afternoon"><a href="#Afternoon" class="headerlink" title="Afternoon"></a>Afternoon</h1><ul><li><input disabled="" type="checkbox"> P5278</li><li><input checked="" disabled="" type="checkbox"> P5482</li><li><input disabled="" type="checkbox"> P7706</li><li><input disabled="" type="checkbox"> 整理书籍</li><li><input disabled="" type="checkbox"> Blog</li><li><input disabled="" type="checkbox"> 初赛</li></ul><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>USACO Training + GMOJ + Luogu 题单 + Codeforces 比赛</p><p><a href="https://github.com/i-zhen/USACO-training">USACO Training Solution</a></p><p><a href="https://train.usaco.org/">USACO Training</a></p><p>感觉足够打了，但要加快一下刷题的速度，明显的刷题速度不够，考场时间肯定不够安排！</p><p>还有很多的东西没有学吖，大概1周学1-2个新算法</p><p>初赛要加快学习了</p><p>Blog 的话，整回GitHub+Hexo 教育云的链接需要重置</p><p>突然发现 VPS+域名没有意义了QwQ 穷有穷的办法对不对</p><p>而且梯子成为日常之后，已经算一笔不小的开销了</p>]]></content>
      
      
      <categories>
          
          <category> 夜谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 夜谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux OBS Note</title>
      <link href="/2021-2/archlinux-obs-note/"/>
      <url>/2021-2/archlinux-obs-note/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">loginctl</span><br><span class="line">loginctl show-session [session] -p Type</span><br><span class="line">nano /etc/gdm/custom.conf</span><br><span class="line">WaylandEnable=<span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux 食用记</title>
      <link href="/2021-2/archlinux-install/"/>
      <url>/2021-2/archlinux-install/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>可恶的 Windows 10 隔三差五的更新，导致我许多软件还未保存数据，第二天一早发现数据丢了，淦；懒癌发作，迟迟没有安装Linux，拖了将近半年</p><p>话说回来，上一次折腾ArchLinux是5年前在一台破破的Dell 酷睿2双核笔记本上完成的，5年之后，随着电脑配置的飞速增长，Arch Linux又变化了多少？</p></blockquote><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><blockquote><p>ThinkPad T14s AMD Gen 1 (08CD)</p><p>CPU: AMD Ryzen 7 Pro 4750U with Radeon Vega 8</p><p>ArchLinux 食用记RAM: DDR4 16GB on board</p><p>SSD: WDC PC SN730 512GB NVME</p></blockquote><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>需要有一台 Windows 7 版本以上或 Linux 任意发行版 的电脑</p><p>需要有一个空白的U盘，建议 8GB 起步</p><p>准备好安装镜像，推荐在国内各高校镜像源下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">清华tuna源: https://mirrors.tuna.tsinghua.edu.cn/</span><br><span class="line">中科大ustc源：https://mirrors.ustc.edu.cn/</span><br></pre></td></tr></table></figure><p>用于烧录镜像的软件</p><ul><li>Rufus ——Windows下图形化常用软件<code>https://rufus.ie</code></li><li>dd ——Linux下终端常用工具</li></ul><h1 id="正片开始"><a href="#正片开始" class="headerlink" title="正片开始"></a>正片开始</h1><h2 id="烧录U盘"><a href="#烧录U盘" class="headerlink" title="烧录U盘"></a>烧录U盘</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><h2 id="BIOS设置"><a href="#BIOS设置" class="headerlink" title="BIOS设置"></a>BIOS设置</h2><p>我的电脑由于是ThinkPad，开机按Enter或者F1进入BIOS</p><p>我们需要将电源管理模式改为Linux（S3睡眠模式），以及安全模式改为Other OS</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>待我们将BIOS设置完成之后，重启按F12 选择U盘启动</p><h3 id="设置网络"><a href="#设置网络" class="headerlink" title="设置网络"></a>设置网络</h3><ul><li><p>使用无线网络 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span></span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> &lt;device name&gt; up</span><br><span class="line">iwctl</span><br><span class="line">&gt; device list</span><br><span class="line">&gt; station &lt;device name&gt; scan</span><br><span class="line">&gt; station &lt;device name&gt; get-networks</span><br><span class="line">&gt; station &lt;device name&gt; connect &lt;WiFi name&gt;</span><br><span class="line">&gt; quit</span><br></pre></td></tr></table></figure></li><li><p>使用有线网络</p><p>1）需要固定ip</p><p>2）无需固定ip -&gt; 插上网线即可</p></li><li><p>检查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping baidu.com -c 3</span><br></pre></td></tr></table></figure></li></ul><h3 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h3><ul><li><p>查询硬件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br><span class="line">我的NvmeSSD硬件名是 nvme0n1</span><br></pre></td></tr></table></figure></li><li><p>分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/nvme0n1</span><br><span class="line">&gt; mklabel gpt</span><br><span class="line">&gt; mkpart primary fat32 1M 512M</span><br><span class="line">&gt; <span class="built_in">set</span> 1 boot on</span><br><span class="line">&gt; mkpart primary ext4 512M 100G</span><br><span class="line">&gt; mkpart primary linux-swap 100G 104G</span><br><span class="line">&gt; mkpart primary ext4 104G 100%</span><br><span class="line">&gt; quit</span><br></pre></td></tr></table></figure></li><li><p>格式化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkfs.fat32 /dev/nvme0n1p1</span><br><span class="line">mkfs.ext4 /dev/nvme0n1p2</span><br><span class="line">mkfs.ext4 /dev/nvme0n1p4</span><br><span class="line">mkswap /dev/nvme0n1p3</span><br></pre></td></tr></table></figure></li><li><p>挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mount /dev/nvme0n1p2 /mnt</span><br><span class="line">$ <span class="built_in">mkdir</span> /mnt/&#123;boot,home&#125;</span><br><span class="line">$ mount /dev/nvme0n1p1 /mnt/boot</span><br><span class="line">$ mount /dev/nvme0n1p4 /mnt/home</span><br><span class="line">$ swapon /dev/nvme0n1p3</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装基本系统"><a href="#安装基本系统" class="headerlink" title="安装基本系统"></a>安装基本系统</h3><ul><li><p>添加软件源</p><p>编辑 <code>/etc/pacman.d/mirrorlist</code>，在文件开头加入下面的国内高校源，以加快下载速度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br><span class="line">Server = htpps://mirrors.ustc.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure><p>保存后，更新软件包列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pacman -Syy</span><br></pre></td></tr></table></figure></li><li><p>安装基本系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ practrap /mnt linux linux-firmware base base-devel nano iwd dhpchd</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h3><ul><li><p>进入宿主机系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ arch-chroot /mnt</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>dilworth定理 笔记</title>
      <link href="/2021-2/oi-dilworth/"/>
      <url>/2021-2/oi-dilworth/</url>
      
        <content type="html"><![CDATA[<p>[example] [Luogu P1233] [Luogu P1020]</p><p>[讲解][<a href="https://www.cnblogs.com/chr1stopher/p/10339339.html]">https://www.cnblogs.com/chr1stopher/p/10339339.html]</a></p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>夜谈 2021/08/16</title>
      <link href="/2021/nt-2021-08-16/"/>
      <url>/2021/nt-2021-08-16/</url>
      
        <content type="html"><![CDATA[<blockquote><p>过往的一切虽已被历史封存，情绪也许随时间所褪去，但情感却在慢慢筑起，最终成为一场大爆炸</p></blockquote><h2 id="周末"><a href="#周末" class="headerlink" title="周末"></a>周末</h2><p>发生了不愉快的事情？忘记就好啦！</p><h2 id="OI"><a href="#OI" class="headerlink" title="OI"></a>OI</h2><p>昨晚把模拟赛的前两题补了，（发现构造题我是真的菜，也没写过几道</p><p>今天就写了几道构造题练练手，还把图论题单的几道题写了</p><p>P3275 P3489 P2047 P1993 P2888 P2419</p><p>P5595 P7107</p><p>看起来自己还有好多内容不会呢，加油吖！</p><h2 id="有感"><a href="#有感" class="headerlink" title="有感"></a>有感</h2><p>做人、做事，其实都讲究一个道理——细腻：做人要顾得别人感受，体会情绪的不同变化；做事要细心、严谨，多留一个心眼。小事虽小，却足以洞察一个人的内心。（班会）</p><hr><p>我有什么想完成、想得到的吗？</p><p>似乎内心渴望的那些事物，对自己来说遥不可及；</p><p>每一个OIer都渴望着那一份最高的荣誉，但又可望而不可及；</p><p>我是那个最不起眼的、被别人所轻视的孩子；</p><p>但我曾经也逆风翻盘过；</p><p>明天？没个准头！</p>]]></content>
      
      
      <categories>
          
          <category> 夜谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 夜谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜谈 2021/08/12</title>
      <link href="/2021/nt-2021-08-12/"/>
      <url>/2021/nt-2021-08-12/</url>
      
        <content type="html"><![CDATA[<blockquote><p>昨天有事，咕咕咕了</p></blockquote><h2 id="OI"><a href="#OI" class="headerlink" title="OI"></a>OI</h2><p>昨天学了Tarjan的有向图强连通分量的缩点，（其实就是把代码敲了10遍？）其实是做了10道相关的题</p><p>差不多都是缩点完进行DAG上的动态规划，或者跑最短路</p><p>今天颓了，零零散散写了几道题，（<del>发现自己推式子的能力提升了？雾</del></p><h2 id="Life"><a href="#Life" class="headerlink" title="Life"></a>Life</h2><p>早上第四节装机房，全换了固态硬盘（<del>学校良心</del></p><p>虽然都是清一色的奔腾双核，（<del>四代构架也不是不能用</del>，用固态跑能快亿点点</p><p>下午两节活动课，打羽毛球（<del>废物</del></p><p>mkc:你是不是天生抵制球类</p><h2 id="有感"><a href="#有感" class="headerlink" title="有感"></a>有感</h2><p>机房里某些人真的是，做事不考虑前因后果，没头没脑，不顾虑其他东西的，（<del>叹气</del></p><p>自己虽然比较弱，但内心还是保留着些许未来的希望；未来，只能靠自己走；别人怎么走是别人的事，不需要你去劝他，或是说服他；也不需要别人来说服你，你怎么样，最清楚的是你，不要被其他人的负面情绪影响了。</p><h2 id="Next-Day"><a href="#Next-Day" class="headerlink" title="Next Day"></a>Next Day</h2><ul><li><input disabled="" type="checkbox"> 学CDQ分治，完成三维偏序</li><li><input disabled="" type="checkbox"> 复习 Tarjan 割点 割边</li></ul>]]></content>
      
      
      <categories>
          
          <category> 夜谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 夜谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[GMOJ] 4253.【五校联考7day2】QYQ在艾泽拉斯</title>
      <link href="/2021/GMOJ4253/"/>
      <url>/2021/GMOJ4253/</url>
      
        <content type="html"><![CDATA[<p>Tarjan缩点+并查集求联通块+拓扑序DP</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">1e5</span>+<span class="number">5</span>,Maxm=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> u,v,next;</span><br><span class="line">&#125;e[Maxm][<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> head[Maxn][<span class="number">2</span>],cnt[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v,<span class="type">int</span> p)</span></span>&#123;</span><br><span class="line">e[++cnt[p]][p]=(Edge)&#123;u,v,head[u][p]&#125;;</span><br><span class="line">head[u][p]=cnt[p];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> p=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(p&lt;<span class="string">&#x27;0&#x27;</span>||p&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+p-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,m,K;</span><br><span class="line"><span class="type">int</span> V[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span> head);</span><br><span class="line">n=<span class="built_in">read</span>();m=<span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="type">int</span> u=<span class="built_in">read</span>(),v=<span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">add</span>(u,v,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">V[i]=<span class="built_in">read</span>();</span><br><span class="line">&#125;</span><br><span class="line">K=<span class="built_in">read</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* --Tarjan Start-- */</span></span><br><span class="line"><span class="type">int</span> stack[Maxn],top=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> c[Maxn];</span><br><span class="line"><span class="type">bool</span> vis[Maxn];</span><br><span class="line"><span class="type">int</span> dfn[Maxn],low[Maxn];</span><br><span class="line"><span class="type">int</span> idx=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//std::vector&lt;int &gt; scc[Maxn];</span></span><br><span class="line"><span class="type">int</span> val[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Tarjan</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">dfn[x]=low[x]=++idx;</span><br><span class="line">stack[++top]=x;vis[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x][<span class="number">0</span>];~i;i=e[i][<span class="number">0</span>].next)&#123;</span><br><span class="line"><span class="type">int</span> y=e[i][<span class="number">0</span>].v;</span><br><span class="line"><span class="keyword">if</span>(!dfn[y])&#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(y);</span><br><span class="line">low[x]=<span class="built_in">min</span>(low[x],low[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(vis[y])&#123;</span><br><span class="line">low[x]=<span class="built_in">min</span>(low[x],dfn[y]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dfn[x]==low[x])&#123;</span><br><span class="line">num++;<span class="type">int</span> v;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">v=stack[top--],vis[v]=<span class="number">0</span>;</span><br><span class="line">c[v]=num;</span><br><span class="line"><span class="comment">//scc[num].push_back(v);</span></span><br><span class="line">val[num]+=V[v];</span><br><span class="line">&#125;<span class="keyword">while</span>(x!=v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* --Tarjan End-- */</span></span><br><span class="line"><span class="type">int</span> indeg[Maxn],fa[Maxn],f[Maxn];</span><br><span class="line"><span class="type">bool</span> flag[Maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[x]!=x) fa[x]=<span class="built_in">find</span>(fa[x]);</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="built_in">find</span>(a),y=<span class="built_in">find</span>(b);</span><br><span class="line"><span class="keyword">if</span>(x!=y)&#123;</span><br><span class="line">fa[x]=y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">flag[x]=<span class="number">1</span>;f[x]+=val[x];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x][<span class="number">1</span>];~i;i=e[i][<span class="number">1</span>].next)&#123;</span><br><span class="line"><span class="type">int</span> y=e[i][<span class="number">1</span>].v;</span><br><span class="line">indeg[y]--;</span><br><span class="line">f[y]=<span class="built_in">max</span>(f[y],f[x]);</span><br><span class="line"><span class="keyword">if</span>(!indeg[y]) <span class="built_in">dfs</span>(y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans[Maxn],Ans;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">freopen</span>(<span class="string">&quot;azeroth.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line"><span class="built_in">freopen</span>(<span class="string">&quot;azeroth.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"><span class="built_in">input</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!dfn[i]) <span class="built_in">Tarjan</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line">fa[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>;x&lt;=n;x++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x][<span class="number">0</span>];~i;i=e[i][<span class="number">0</span>].next)&#123;</span><br><span class="line"><span class="type">int</span> y=e[i][<span class="number">0</span>].v;</span><br><span class="line"><span class="keyword">if</span>(c[x]==c[y]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(c[x],c[y],<span class="number">1</span>);</span><br><span class="line">indeg[c[y]]++;</span><br><span class="line"><span class="built_in">merge</span>(c[x],c[y]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!flag[i]&amp;&amp;!indeg[i])&#123;</span><br><span class="line"><span class="built_in">dfs</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line">ans[<span class="built_in">find</span>(i)]=<span class="built_in">max</span>(f[i],ans[<span class="built_in">find</span>(i)]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(ans+<span class="number">1</span>,ans+<span class="number">1</span>+num,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">min</span>(K+<span class="number">1</span>,num);i++)&#123;</span><br><span class="line">Ans+=ans[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;Ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>夜谈 2021/08/10</title>
      <link href="/2021/nt-2021-08-10/"/>
      <url>/2021/nt-2021-08-10/</url>
      
        <content type="html"><![CDATA[<blockquote><p>屋里看看雨景，看着挺美；屋外踩踩水坑，鞋都湿了！</p></blockquote><h2 id="Luogu"><a href="#Luogu" class="headerlink" title="Luogu"></a>Luogu</h2><p>P1045: 简单的换底公式+高精度快速幂</p><p>P1850: 暴力72（m&lt;&#x3D;2）正解 期望DP</p><p>P4071: 费马小定理求逆元+组合计数+递推公式</p><p>P1966: 归并排序+逆序对（序列a转化到序列b所需最小步数）</p><p>P1228: 分治</p><blockquote><p>是的，分治哪有那么简单，（cdq分治就可以弄死你了！）（菜死了QwQ）</p></blockquote><h2 id="8月总任务"><a href="#8月总任务" class="headerlink" title="8月总任务"></a>8月总任务</h2><ul><li><input disabled="" type="checkbox"> 完成夏令营网课（到21日）</li><li><input disabled="" type="checkbox"> 完成6-9套模拟题</li></ul><h2 id="Next-Day"><a href="#Next-Day" class="headerlink" title="Next Day"></a>Next Day</h2><ul><li><input disabled="" type="checkbox"> GMOJ 08-09 完成补题（明天下午）</li><li><input disabled="" type="checkbox"> 收拾生物营里面的书籍（明天下午）</li><li><input disabled="" type="checkbox"> 完成夏令营Day2-3 （明天早上）</li></ul><h2 id="有感"><a href="#有感" class="headerlink" title="有感"></a>有感</h2><p>还是刷的题太少了，每天顶多就6道QwQ，争取提高速度</p><p>迷茫吗？我想，有了任务，脚踏实地地一步一步完成，应该就能拿到属于自己的东西吧</p>]]></content>
      
      
      <categories>
          
          <category> 夜谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 夜谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜谈 2021/08/09</title>
      <link href="/2021/nt-2021-08-09/"/>
      <url>/2021/nt-2021-08-09/</url>
      
        <content type="html"><![CDATA[<blockquote><p>周一？真就周一综合征复发</p></blockquote><p>自我感觉今天没昨天那么颓了，起码把最低要求的任务完成了</p><h2 id="GMOJ"><a href="#GMOJ" class="headerlink" title="GMOJ"></a>GMOJ</h2><p>T1 AC自动机 （写了暴力DP）</p><p>T2 Tarjan缩点+拓扑序DP+并查集求联通块（还没过）</p><p>T3 实数值域上的二分+前缀和</p><p>T4 找规律，组合数学（还没写）</p><h2 id="Luogu"><a href="#Luogu" class="headerlink" title="Luogu"></a>Luogu</h2><p>完成了 夏令营Day1</p><p>P1884：面积并 用差分解决的（扫描线那么麻烦的东西 懒人怎么会打呢）</p><h2 id="运动"><a href="#运动" class="headerlink" title="运动"></a>运动</h2><p>8月以来的第一次跑步？（1500m 只能冲刺200m）（已经废了）</p><h2 id="Next-Day"><a href="#Next-Day" class="headerlink" title="Next Day"></a>Next Day</h2><ul><li><input disabled="" type="checkbox"> 补完GMOJ的题</li><li><input disabled="" type="checkbox"> 夏令营Day2</li></ul>]]></content>
      
      
      <categories>
          
          <category> 夜谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 夜谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜谈 2021/08/08</title>
      <link href="/2021/nt-2021-08-08/"/>
      <url>/2021/nt-2021-08-08/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最后半小时，随便写写？</p></blockquote><h2 id="信友队比赛"><a href="#信友队比赛" class="headerlink" title="信友队比赛"></a>信友队比赛</h2><blockquote><p>中级组 300&#x2F;400</p></blockquote><p>还算满意，</p><p>T1: 单纯的入栈出栈匹配，左括号正着扫，右括号反着扫</p><p>T2: 暴力的优化过了？？正解讲评云里雾里，明天再看看</p><p>T3: 贪心 用数形结合来证明</p><p>斜率越大，那么围成的面积可以越大。</p><p>考场瞎搞过了？？就离谱</p><p>T4: 欧拉回路 正解不懂</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>懒癌发作，绿题该刷的都过了；蓝题和紫题不会写，又懒，又不想动。</p><p>今天一天都在摸鱼啊…明天该干正事了</p><p>真希望有个人，能管着你不摸鱼（小受的心理吗(✿◡‿◡)</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>小红点真心不好用…灵敏度调到最高了还是滑动很慢，指关节也挺痛的</p><p>下一台电脑打死不买 ThinkPad …</p><h2 id="Next-Day"><a href="#Next-Day" class="headerlink" title="Next Day"></a>Next Day</h2><ul><li><input checked="" disabled="" type="checkbox"> 听完 夏令营Day1 完成作业</li><li><input disabled="" type="checkbox"> GMOJ 挑一套做</li><li><input disabled="" type="checkbox"> 把宣传片素材整理了</li><li><input disabled="" type="checkbox"> IBM KB-9910</li></ul>]]></content>
      
      
      <categories>
          
          <category> 夜谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 夜谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[POJ1821]Fence</title>
      <link href="/2021/POJ-1821/"/>
      <url>/2021/POJ-1821/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">16005</span>,Maxk=<span class="number">105</span>;</span><br><span class="line"><span class="type">int</span> dp[Maxk][Maxn],q[Maxn],head,tail;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> L,P,S;</span><br><span class="line">&#125;a[Maxk];</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &lt;(node x,node y)&#123;</span><br><span class="line"><span class="keyword">return</span> x.S&lt;y.S;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> p=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(p&lt;<span class="string">&#x27;0&#x27;</span>||p&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+p-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n=<span class="built_in">read</span>();m=<span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">a[i]=(node)&#123;<span class="built_in">read</span>(),<span class="built_in">read</span>(),<span class="built_in">read</span>()&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+m);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">head=<span class="number">1</span>,tail=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="built_in">max</span>(<span class="number">0</span>,a[i].S-a[i].L);k&lt;=a[i].S<span class="number">-1</span>;k++)&#123;</span><br><span class="line"><span class="keyword">while</span>(head&lt;=tail&amp;&amp;dp[i<span class="number">-1</span>][q[tail]]-a[i].P*q[tail]&lt;=dp[i<span class="number">-1</span>][k]-a[i].P*k) tail--;</span><br><span class="line">q[++tail]=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">dp[i][j]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][j],dp[i][j<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">if</span>(j&gt;=a[i].S)&#123;</span><br><span class="line"><span class="keyword">while</span>(head&lt;=tail&amp;&amp;q[head]&lt;j-a[i].L) head++;</span><br><span class="line"><span class="keyword">if</span>(head&lt;=tail)&#123;</span><br><span class="line">dp[i][j]=<span class="built_in">max</span>(dp[i][j],a[i].P*j+dp[i<span class="number">-1</span>][q[head]]-a[i].P*q[head]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[m][n]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">将工人按照Si的顺序排列，从而符合枚举顺序</span></span><br><span class="line"><span class="comment">设F[i][j]为前i个人粉刷了j块木板所能获得的最大报酬</span></span><br><span class="line"><span class="comment">则有</span></span><br><span class="line"><span class="comment">F[i][j]=F[i-1][j]</span></span><br><span class="line"><span class="comment">F[i][j]=F[i][j-1]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">第i个人粉刷了从k+1到j的木板 </span></span><br><span class="line"><span class="comment">k+1≤Si≤j j-k≤Li</span></span><br><span class="line"><span class="comment">j-Li≤k≤Si-1  Si≤j</span></span><br><span class="line"><span class="comment">F[i][j]=max(F[i][j],F[i-1][k]+Pi*(j-k));</span></span><br><span class="line"><span class="comment">F[i][j]=max(F[i][j],Pi*j+F[i-1][k]-Pi*k);</span></span><br><span class="line"><span class="comment">F[i][j]=Pi*j+max(F[i-1][k]-Pi*k);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【纪中集训】Day 4</title>
      <link href="/2021/JZOJ-day4/"/>
      <url>/2021/JZOJ-day4/</url>
      
        <content type="html"><![CDATA[<h2 id="T1-Colorful-Circle-1930"><a href="#T1-Colorful-Circle-1930" class="headerlink" title="T1 Colorful Circle [1930]"></a>T1 Colorful Circle [1930]</h2><h3 id="题解：期望DP"><a href="#题解：期望DP" class="headerlink" title="题解：期望DP"></a>题解：期望DP</h3><p>若题目中的环改成链，则我们可以列出如下转移方程：</p><p>设 $dp[i]$ 为这条链上前 $i$ 个珠子的“美观程度”期望值</p><p>设 $f[i]$ 为 $i$ 个珠子同色的概率</p><p>则有</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f[i]=f[i<span class="number">-1</span>]*<span class="number">1</span>/m i∈[<span class="number">2</span>,n]</span><br><span class="line">f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">dp[j]+=dp[i]*(j-i)*p[j-i]*(m<span class="number">-1</span>)/m i,j∈[<span class="number">0</span>,n] &amp; i&lt;j</span><br></pre></td></tr></table></figure><p>其中，$(j-i)$是区间$(i,j]$珠子的数量，$p[j-i]$ 是此区间珠子同色的概率，$(m-1)&#x2F;m$ 是选择与珠子 $i$ 颜色不相同的概率</p><p>现在我们将链改成环，则我们需要考虑将环断成链时，首尾颜色是否相同</p><blockquote><p>若首尾颜色相同，则我们断开的位置是同一段位置；</p><p>若首尾颜色不同，则我们断开的位置是两段不同颜色的珠子的交界处</p></blockquote><p>我们将转移方程加上一维</p><p>设 $dp[i][0&#x2F;1]$ 表示这条链上前i个珠子的”美观程度”期望值，并且首尾珠子颜色不同&#x2F;相同</p><p>则有</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp[j][<span class="number">0</span>]+=dp[i][<span class="number">0</span>]*p[j-i]*(j-i)*(m<span class="number">-2</span>)/m+dp[i][<span class="number">1</span>]*p[j<span class="number">-1</span>]*(j-i)*(m<span class="number">-1</span>)/m i,j∈[<span class="number">0</span>,n] &amp; i&lt;j</span><br><span class="line">dp[j][<span class="number">1</span>]+=dp[i][<span class="number">0</span>]*p[j-i]*(j-i)*<span class="number">1</span>/m</span><br></pre></td></tr></table></figure><p>最后我们进行统计答案，我们固定一个珠子为点P，包含点P、长度为 $i$ 连续颜色区间一共有 $i$ 个，每一个环的期望为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ans=dp[n-i][<span class="number">0</span>]*(i*i)*p[i] i∈[<span class="number">1</span>,n)</span><br></pre></td></tr></table></figure><p>前一个 $i$ 表示 该区间的长度，后一个 $i$ 表示 相同条件的区间一共有 $i$ 个。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">205</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> p=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(p&lt;<span class="string">&#x27;0&#x27;</span>||p&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+p-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">double</span> p[Maxn],dp[Maxn][<span class="number">2</span>];</span><br><span class="line"><span class="type">double</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n=<span class="built_in">read</span>();m=<span class="built_in">read</span>();</span><br><span class="line">p[<span class="number">1</span>]=<span class="number">1.000000000</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">p[i]=p[i<span class="number">-1</span>]*<span class="number">1.0000000</span>/m;</span><br><span class="line">&#125;</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">dp[j][<span class="number">0</span>]+=(j-i)*p[j-i]*(dp[i][<span class="number">0</span>]*(m<span class="number">-2</span>)/m+dp[i][<span class="number">1</span>]*(m<span class="number">-1</span>)/m);</span><br><span class="line">dp[j][<span class="number">1</span>]+=dp[i][<span class="number">0</span>]*(j-i)*p[j-i]*<span class="number">1</span>/m;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans+=p[n]*n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">ans+=i*i*p[i]*dp[n-i][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.10lf&quot;</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[JZOJ]2021.07.12 【NOIP提高B组】模拟</title>
      <link href="/2021/JZOJ-day1/"/>
      <url>/2021/JZOJ-day1/</url>
      
        <content type="html"><![CDATA[<h1 id="T2-最短路径"><a href="#T2-最短路径" class="headerlink" title="T2 最短路径"></a>T2 最短路径</h1><p>Date: 2021&#x2F;07&#x2F;12 Author: 杳鸢 Status: 草稿</p><h2 id="心路历程"><a href="#心路历程" class="headerlink" title="心路历程"></a>心路历程</h2><blockquote><p>（第一眼）：这个题是不是可以跑一下最短路（此时已经开始敲Dij模板）</p><p>（Thousands of years later）：怎么这么多限制条件，难受（跳到T4去了）</p></blockquote><h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><blockquote><p>根据题目可知，一次来回需要每个点都严格经过，可以将题目转化为从点０到点１走两次，并且两条路径不重合、各自包含一个特殊点，求两条路径最小值。考虑动态规划的做法。</p></blockquote><p>设<code>f(i,j)</code>为从点<code>i</code>到点<code>0</code>和点<code>j</code>到点<code>0</code>两条路径之和的最小值</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数论 笔记</title>
      <link href="/2021-2/oi-math-note/"/>
      <url>/2021-2/oi-math-note/</url>
      
        <content type="html"><![CDATA[<h2 id="整除"><a href="#整除" class="headerlink" title="整除"></a>整除</h2><p>对于正整数 $n,m$ ，如果存在整数 $q$ 使得 $n&#x3D;qm$ ，则称 $m$ 整除 $n$，记作 $m | n$ 。</p><p>称 $m$ 是 $n$ 的约数，$n$ 是 $m$ 的倍数。</p><h2 id="最大公约数"><a href="#最大公约数" class="headerlink" title="最大公约数"></a>最大公约数</h2><p>对于正整数 $a,b$ ，若正整数 $d$ 满足 $d|a$ 且 $d|b$ ，则称 $d$ 是 $a$ 和 $b$ 的公约数 。</p><p>$a$ 和 $b$ 最大的公约数称为 $a,b$ 的最大公约数，记作 $gcd(a,b)$ 或 $(a,b)$。</p><p>性质：$d$ 是 $a,b$ 的公约数等价于 $d|gcd(a,b)$ 。</p><h2 id="最小公倍数"><a href="#最小公倍数" class="headerlink" title="最小公倍数"></a>最小公倍数</h2><p>对于正整数 $a,b$ ，若正整数 $d$  满足 $a|d$ 且 $b|d$ ，则称 $d$ 是 $a$ 和 $b$ 的公倍数。</p><p>$a$ 和 $b$ 最小的公倍数称为 $a,b$ 的最小公倍数，记作 $lcm(a,b)$ 或 $[a,b]$ 。</p><h3 id="性质："><a href="#性质：" class="headerlink" title="性质："></a>性质：</h3><p>对于正整数 $a,b$ ，有$ab&#x3D;gcd(a,b)lcm(a,b)$ 。</p><h2 id="互质"><a href="#互质" class="headerlink" title="互质"></a>互质</h2><p>若正整数 $a,b$ 满足 $gcd(a,b)&#x3D;1$ ，则称 $a$ 与 $b$ 互质。</p><p>有时也记为 $a \bot b$ </p><h2 id="取整函数"><a href="#取整函数" class="headerlink" title="取整函数"></a>取整函数</h2><p>对于实数 $x$ ，记 $\lfloor x \rfloor$ 为不超过 $x$ 的最大整数。</p><p> $\lfloor x \rfloor$ 也是满足如下关系的唯一整数：</p><p> $\lfloor x \rfloor \leq x &lt; \lfloor x \rfloor +1$</p><h3 id="性质1："><a href="#性质1：" class="headerlink" title="性质1："></a>性质1：</h3><p>对于正整数 $n$ ，$1$ 到 $n$ 中 $d$ 的倍数有 $\lfloor \frac{n}{d} \rfloor$ 个。</p><h3 id="性质2："><a href="#性质2：" class="headerlink" title="性质2："></a>性质2：</h3><p>对于任意的 $x$ 与正整数 $a,b$，我们均有：<br>$$<br>\lfloor \frac{\lfloor \frac{x}{a} \rfloor}{b} \rfloor&#x3D;\lfloor \frac{x}{ab} \rfloor<br>$$</p><h3 id="性质3："><a href="#性质3：" class="headerlink" title="性质3："></a>性质3：</h3><p>对于正整数 $n$，考虑当 $1 \leq d \leq n$ 时，$\lfloor \frac{n}{d} \rfloor$ 的不同取值的个数。</p><p>若 $d \leq \sqrt{n}$，则能得到的 $\lfloor \frac{n}{d} \rfloor$ 只有不超过 $\sqrt{n}$ 种。</p><p>若 $d &gt; \sqrt{n} $，则 $\lfloor \frac{n}{d} \rfloor \leq \frac{n}{d} &lt; \sqrt{n}$，又因为 $\lfloor \frac{n}{d} \rfloor$ 是正整数，故此时可能的取值也不超过 $\sqrt{n}$ 种。</p><p>综上，$\lfloor \frac{n}{d} \rfloor$ 可能的取值不超过 $2\sqrt{n}$ 种。</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[Luogu P3369]【模板】普通平衡树</title>
      <link href="/2021/Luogu-P3369/"/>
      <url>/2021/Luogu-P3369/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> rt,tot=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> fa[Maxn],ch[Maxn][<span class="number">2</span>],val[Maxn],cnt[Maxn],siz[Maxn];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* --Update the size of the point x-- */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Update_SIZE</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;siz[x]=siz[ch[x][<span class="number">0</span>]]+siz[ch[x][<span class="number">1</span>]]+cnt[x];&#125;</span><br><span class="line"><span class="comment">/* --Check the location of the point x-- */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;<span class="keyword">return</span> x==ch[fa[x]][<span class="number">1</span>] ;&#125;</span><br><span class="line"><span class="comment">/* --Delete the point x-- */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clear</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;ch[x][<span class="number">0</span>]=ch[x][<span class="number">1</span>]=fa[x]=val[x]=siz[x]=cnt[x]=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">rotate</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> y=fa[x],z=fa[y],chk=<span class="built_in">get</span>(x);<span class="comment">//0-&gt;Right 1-&gt;Left</span></span><br><span class="line">ch[y][chk]=ch[x][chk^<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(ch[x][chk^<span class="number">1</span>])&#123;fa[ch[x][chk^<span class="number">1</span>]]=y;&#125;</span><br><span class="line">ch[x][chk^<span class="number">1</span>]=y;</span><br><span class="line">fa[y]=x;</span><br><span class="line">fa[x]=z;</span><br><span class="line"><span class="keyword">if</span>(z) ch[z][y==ch[z][<span class="number">1</span>]]=x;</span><br><span class="line"><span class="built_in">Update_SIZE</span>(x);</span><br><span class="line"><span class="built_in">Update_SIZE</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">splay</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> f=fa[x];f=fa[x],f;<span class="built_in">rotate</span>(x))&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[f]) <span class="built_in">rotate</span>(<span class="built_in">get</span>(x)==<span class="built_in">get</span>(f)?f:x);</span><br><span class="line">&#125;</span><br><span class="line">rt=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rt)&#123;</span><br><span class="line">val[++tot]=k;</span><br><span class="line">cnt[tot]++;</span><br><span class="line">rt=tot;</span><br><span class="line"><span class="built_in">Update_SIZE</span>(rt);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> now=rt,Fa=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(val[now]==k)&#123;</span><br><span class="line">cnt[now]++;</span><br><span class="line"><span class="built_in">Update_SIZE</span>(now);</span><br><span class="line"><span class="built_in">Update_SIZE</span>(Fa);</span><br><span class="line"><span class="built_in">splay</span>(now);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">Fa=now;</span><br><span class="line">now=ch[now][val[now]&lt;k];</span><br><span class="line"><span class="keyword">if</span>(!now)&#123;</span><br><span class="line">val[++tot]=k;</span><br><span class="line">cnt[tot]++;</span><br><span class="line">fa[tot]=Fa;</span><br><span class="line">ch[Fa][val[Fa]&lt;k]=tot;</span><br><span class="line"><span class="built_in">Update_SIZE</span>(tot);</span><br><span class="line"><span class="built_in">Update_SIZE</span>(Fa);</span><br><span class="line"><span class="built_in">splay</span>(tot);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rk</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>,now=rt;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(k&lt;val[now])&#123;</span><br><span class="line">now=ch[now][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ans+=siz[ch[now][<span class="number">0</span>]];</span><br><span class="line"><span class="keyword">if</span>(k==val[now])&#123;</span><br><span class="line"><span class="built_in">splay</span>(now);</span><br><span class="line"><span class="keyword">return</span> ans+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans+=cnt[now];</span><br><span class="line">now=ch[now][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">kth</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> now=rt;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(ch[now][<span class="number">0</span>]&amp;&amp;k&lt;=siz[ch[now][<span class="number">0</span>]])&#123;</span><br><span class="line">now=ch[now][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">k-=cnt[now]+siz[ch[now][<span class="number">0</span>]];</span><br><span class="line"><span class="keyword">if</span>(k&lt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">splay</span>(now);</span><br><span class="line"><span class="keyword">return</span> val[now];</span><br><span class="line">&#125;</span><br><span class="line">now=ch[now][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> now=ch[rt][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">while</span>(ch[now][<span class="number">1</span>]) now=ch[now][<span class="number">1</span>];</span><br><span class="line"><span class="built_in">splay</span>(now);</span><br><span class="line"><span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">nxt</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> now=ch[rt][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span>(ch[now][<span class="number">0</span>]) now=ch[now][<span class="number">0</span>];</span><br><span class="line"><span class="built_in">splay</span>(now);</span><br><span class="line"><span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="built_in">rk</span>(k);</span><br><span class="line"><span class="keyword">if</span>(cnt[rt]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">cnt[rt]--;</span><br><span class="line"><span class="built_in">Update_SIZE</span>(rt);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!ch[rt][<span class="number">0</span>]&amp;&amp;!ch[rt][<span class="number">1</span>])&#123;</span><br><span class="line"><span class="built_in">clear</span>(rt);</span><br><span class="line">rt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!ch[rt][<span class="number">0</span>])&#123;</span><br><span class="line"><span class="type">int</span> now=rt;</span><br><span class="line">rt=ch[rt][<span class="number">1</span>];</span><br><span class="line">fa[rt]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">clear</span>(now);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!ch[rt][<span class="number">1</span>])&#123;</span><br><span class="line"><span class="type">int</span> now=rt;</span><br><span class="line">rt=ch[rt][<span class="number">0</span>];</span><br><span class="line">fa[rt]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">clear</span>(now);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> now=rt,x=<span class="built_in">pre</span>();</span><br><span class="line">fa[ch[now][<span class="number">1</span>]]=x;</span><br><span class="line">ch[x][<span class="number">1</span>]=ch[now][<span class="number">1</span>];</span><br><span class="line"><span class="built_in">clear</span>(now);</span><br><span class="line"><span class="built_in">Update_SIZE</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> p=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(p&lt;<span class="string">&#x27;0&#x27;</span>||p&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+p-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,opt,x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;opt,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">insert</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">del</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">3</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">rk</span>(x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">4</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">kth</span>(x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">5</span>)&#123;</span><br><span class="line"><span class="built_in">insert</span>(x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,val[<span class="built_in">pre</span>()]);</span><br><span class="line"><span class="built_in">del</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">insert</span>(x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,val[<span class="built_in">nxt</span>()]);</span><br><span class="line"><span class="built_in">del</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>旧时代的落幕，新时代的升起</title>
      <link href="/2020/2020-summary/"/>
      <url>/2020/2020-summary/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Update: 现在看来，当时确实很中二哈哈哈哈 供大家看个乐子啦~</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>21世纪的第20个年头即将走过，当新年的钟声响起，二十年代缓缓走入人类的历史里，而三十年代正步伐铿锵地朝我们走来。过去的这一年，甚至是这十年，风起云涌、变幻莫测，而三十年代，处于新时代的我们又将何去何从？我想，只有总结好过去，立足于现在，展望好未来，才能站于不败之地，为我们的国家、民族贡献自己的力量。</p></blockquote><span id="more"></span><h2 id="上半年"><a href="#上半年" class="headerlink" title="上半年"></a>上半年</h2><p>正如你所见，年初，一场突发的公共卫生危机突降武汉，蔓延全国。而我正值处于初三的最后半年，面临着中考升学。实话说，自己对于年初这一段网课的学习没有用心，颓废是常态。返校后，便是变得焦头烂额，应付着来自各科老师的作业、抽查。中考的成绩出来了，中规中矩，不多不少，刚好可以进培优班的门槛。但毕竟考前不努力，考后也不能改变什么。这半年，是一个深重的教训。</p><h2 id="下半年"><a href="#下半年" class="headerlink" title="下半年"></a>下半年</h2><p>中考后三天，我和小伙伴们开始了高中生活。八月份是竞赛课，九月份的文化课，十月份的停课备战竞赛，十一月份三个多星期狂补文化课，十二月初的NOIP，和回归文化课。</p><p>竞赛班的日子是苦的，但毕竟还是相对比较快乐的。下半年，自己刷的OI题相当于初中两年的一倍多，也系统地把数据结构、图论、字符串学习了一遍——但部分算法还是不熟练，自己用的不多。但比赛成绩比较惨——俩个三等奖。教训就是，在自己水平不够的情况下，硬刚题目是不能解决问题的，要通过暴力来先取部分分，在稳定的基础上再想骗分、正解与优化。</p><p>文化课上，开始觉得高中的知识与初中的知识跨度、深度的变化之大，并且不断调整中。而且断断续续的上课与补课，课时之快，觉得有些吃不消，毕竟不能一肚子吃撑，得慢慢做练习消化。可喜的是，基本上课程都补完了，剩下一点点的收尾（巨感动了）。</p><h2 id="活动"><a href="#活动" class="headerlink" title="活动"></a>活动</h2><p>有幸参加运动会，报了1500m的比赛，1006号没有倒数！在这里谢谢大家的捧场和陪跑！<br><img src="/../posts-img/2020-summary-1.png" alt="运动会"></p><h2 id="博客现状-技术栈现状-交际"><a href="#博客现状-技术栈现状-交际" class="headerlink" title="博客现状&amp;技术栈现状&amp;交际"></a>博客现状&amp;技术栈现状&amp;交际</h2><p>这一年来，基本上，Blog是荒废的差不多了，不过还好，八、十月份写了点OI方向的文章。但到现在Hexo和Typecho两个博客系统之间、旧站与新站之间还没收拾整理好，早些时候WordPress的转移尾巴还没处理好，有些拖沓了。</p><p>博客主题样式，到现在还是躺在自己的手稿里，基本上只做了点导航栏和基本框架。</p><p>技术栈上，正经的东西倒是没学多少，倒是学了一堆实用的处理方案（微信文章图片转Word、一键填写综合素质评价、直播流链接视频下载、各种转换格式）。上半年有被Core 2 Duo的弱鸡性能和集显的弱、风扇的呼啸声磨出了性子，下半年换了台新的电脑（AMD YES），ThinkPad的键盘还是属一流的。</p><p>和wsh、zkn俩位神犇结成死党。还有来自金实的cq，神仙一名。还有班里许多许多的神仙们，和新的老师们。</p><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p>希望OI能更上一步，在新的一年里，学好DP和零零散散的知识，扩充自己的知识面，努力争取打到省选。</p><p>文化课，这学期可能保不住了，荒废太久了。但还是希望在这学期最后一个月里能够补起来，期末统考能考好。</p><p>争取时间做好主题，把欠的工作补上来。给自己定一个小目标——学Pr，制作V-log，还有JavaScript等的前端知识。</p><p>自己能开朗些，更大方的与各位交流，不要总是显得很拘谨。自己喜欢的东西能更多元化，更开放包容，接受新的文化。紧跟时代，学习新思想，争做新青年，更多了解时事变化。</p><h2 id="The-End"><a href="#The-End" class="headerlink" title="The End"></a>The End</h2><blockquote><p>总书记之言——“时间之河川流不息，每一代青年都有自己的际遇和机缘，都要在自己所处的时间条件下谋划人生，创造历史，青年是标志时代的最灵敏的晴雨表，时代的责任赋予青年，时代的光荣属于青年。”</p><p>“你所站立的地方，正是你的中国，你怎么样，中国便怎么样；你是什么，中国便是什么；你若光明，中国便不黑暗”。——崔卫平教授</p><p>鲁迅先生曾道，“愿中国青年都摆脱冷气，只是向上走，不必听自暴自弃者流的话。能做事的做事，能发声的发声。有一分热，发一分光，就令萤火一般，也可以在黑暗里发一点光，不必等候炬火。”</p><p>愿大家前程似锦，怀揣着自己的梦想，坚定我们的理想，在未来的路上一步一步走出自己的脚印。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[题解] Luogu P1439 LCS</title>
      <link href="/2020/oi-luogu-p1439/"/>
      <url>/2020/oi-luogu-p1439/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[Maxn],b[Maxn],n;</span><br><span class="line"><span class="type">int</span> map[Maxn];</span><br><span class="line"><span class="type">int</span> f[Maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">map[a[i]]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// n^2 朴素做法</span></span><br><span class="line"><span class="comment">// for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line"><span class="comment">// for(int j=1;j&lt;=n;j++)&#123;</span></span><br><span class="line"><span class="comment">// f[i][j]=max(f[i-1][j],f[i][j-1]);</span></span><br><span class="line"><span class="comment">// if(a[i]==b[j])&#123;</span></span><br><span class="line"><span class="comment">// f[i][j]=max(f[i][j],f[i-1][j-1]+1);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// cout&lt;&lt;f[n][n];</span></span><br><span class="line"><span class="comment">//nlogn 做法：根据两组排列仅位置不同 可以找出B数组中数组在A数组中的位置 再进行LIS</span></span><br><span class="line"><span class="type">int</span> l,r,mid,len=<span class="number">1</span>;</span><br><span class="line">f[<span class="number">1</span>]=map[b[<span class="number">1</span>]];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">l=<span class="number">1</span>,r=len;</span><br><span class="line"><span class="keyword">if</span>(f[len]&lt;=map[b[i]])&#123;</span><br><span class="line">f[++len]=map[b[i]];</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(f[mid]&lt;=map[b[i]]) l=mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">f[l]=map[b[i]];</span><br><span class="line"><span class="keyword">if</span>(l&gt;len) len++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;len&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[题解] Luogu P5022 旅行</title>
      <link href="/2020/oi-luogu-p5022/"/>
      <url>/2020/oi-luogu-p5022/</url>
      
        <content type="html"><![CDATA[<p>做法：</p><ol><li>先对每一条边进行从小到大排序（vector sort）</li><li>对于m&#x3D;&#x3D;n-1的情况 直接跑dfs一遍</li><li>对于m&#x3D;&#x3D;n的情况 考虑枚举删边 再跑dfs</li></ol><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">5005</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> u,v,next;</span><br><span class="line">&#125;e[Maxn*<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> head[Maxn],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">e[++cnt]=(Edge)&#123;u,v,head[u]&#125;;</span><br><span class="line">head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; son[Maxn];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">bool</span> v[Maxn];</span><br><span class="line"><span class="type">int</span> ans[Maxn];</span><br><span class="line"><span class="type">int</span> x,y,cnt_T;</span><br><span class="line"><span class="type">int</span> tmp[Maxn];</span><br><span class="line"><span class="type">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> now,<span class="type">int</span> fa)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(v[now]) <span class="keyword">return</span> ;</span><br><span class="line">v[now]=<span class="number">1</span>;</span><br><span class="line">tmp[++cnt_T]=now;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;son[now].<span class="built_in">size</span>();i++)&#123;</span><br><span class="line"><span class="type">int</span> yy=son[now][i];</span><br><span class="line"><span class="keyword">if</span>(yy==fa) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>((yy==x&amp;&amp;now==y)||(yy==y&amp;&amp;now==x))&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(yy,now);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// for(int i=head[now];~i;i=e[i].next)&#123;</span></span><br><span class="line"><span class="comment">// if(e[i].v==fa)&#123;</span></span><br><span class="line"><span class="comment">// continue;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// if((e[i].v==x&amp;&amp;e[i].u==y)||(e[i].v==y&amp;&amp;e[i].u==x)) continue;</span></span><br><span class="line"><span class="comment">// dfs(e[i].v,now);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> now)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(v[now]) <span class="keyword">return</span> ;</span><br><span class="line">v[now]=<span class="number">1</span>;</span><br><span class="line">ans[++cnt_T]=now;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;son[now].<span class="built_in">size</span>();i++)&#123;</span><br><span class="line"><span class="built_in">dfs2</span>(son[now][i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ans[i]=tmp[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(tmp[i]==ans[i])&#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp[i]&gt;ans[i])&#123;<span class="keyword">return</span> ;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="built_in">change</span>();<span class="keyword">return</span> ;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in">sizeof</span>(head));</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="type">int</span> u,v;</span><br><span class="line">cin&gt;&gt;u&gt;&gt;v;</span><br><span class="line"><span class="built_in">add</span>(u,v);</span><br><span class="line"><span class="built_in">add</span>(v,u);</span><br><span class="line">son[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">son[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">sort</span>(son[i].<span class="built_in">begin</span>(),son[i].<span class="built_in">end</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==m)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;i+=<span class="number">2</span>)&#123;</span><br><span class="line">x=e[i].u;y=e[i].v;</span><br><span class="line">cnt_T=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span> v);</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt_T&lt;n)&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;<span class="built_in">change</span>();flag=<span class="literal">false</span>;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">check</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">dfs2</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POJ3974 Palindrome</title>
      <link href="/2020/oi-POJ-3974/"/>
      <url>/2020/oi-POJ-3974/</url>
      
        <content type="html"><![CDATA[<p>思路:<br>字符串Hash+二分查找</p><p>备注：<br>常用P值 131 or 13331</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">1e6</span>+<span class="number">5</span>,P=<span class="number">131</span>;</span><br><span class="line"><span class="type">char</span> s[Maxn];</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> f[Maxn][<span class="number">2</span>],p[Maxn];</span><br><span class="line"><span class="function"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> <span class="title">Hash</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> f[r][<span class="number">0</span>]-f[l<span class="number">-1</span>][<span class="number">0</span>]*p[r-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> f[l][<span class="number">1</span>]-f[r+<span class="number">1</span>][<span class="number">1</span>]*p[r-l+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> id=<span class="number">0</span>;</span><br><span class="line">p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=Maxn;i++)&#123;p[i]=p[i<span class="number">-1</span>]*P;&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>)!=EOF&amp;&amp;s[<span class="number">1</span>]!=<span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">++id;</span><br><span class="line"><span class="type">int</span> n=<span class="built_in">strlen</span>(s+<span class="number">1</span>),ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;f[i][<span class="number">0</span>]=f[i<span class="number">-1</span>][<span class="number">0</span>]*P+s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;f[i][<span class="number">1</span>]=f[i+<span class="number">1</span>][<span class="number">1</span>]*P+s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="type">int</span> l,r,mid;</span><br><span class="line">l=<span class="number">1</span>;r=<span class="built_in">min</span>(i<span class="number">-1</span>,n-i);</span><br><span class="line"><span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Hash</span>(i-mid,i<span class="number">-1</span>,<span class="number">0</span>)==<span class="built_in">Hash</span>(i+<span class="number">1</span>,i+mid,<span class="number">1</span>))&#123;</span><br><span class="line">l=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;r=mid<span class="number">-1</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,l*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">l=<span class="number">1</span>;r=<span class="built_in">min</span>(i<span class="number">-1</span>,n-i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Hash</span>(i-mid,i<span class="number">-1</span>,<span class="number">0</span>)==<span class="built_in">Hash</span>(i,i+mid<span class="number">-1</span>,<span class="number">1</span>))&#123;</span><br><span class="line">l=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;r=mid<span class="number">-1</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,l*<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d\n&quot;</span>,id,ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高精度运算</title>
      <link href="/2020/oi-high-precision-calc/"/>
      <url>/2020/oi-high-precision-calc/</url>
      
        <content type="html"><![CDATA[<h2 id="高精除以低精"><a href="#高精除以低精" class="headerlink" title="高精除以低精"></a>高精除以低精</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> len,num[Maxn];</span><br><span class="line">&#125;;</span><br><span class="line">node a,w;</span><br><span class="line"><span class="type">int</span> d;<span class="type">char</span> c[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">chufa</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> rest=<span class="number">0</span>;</span><br><span class="line">w.len=a.len;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;w.len;i++)&#123;</span><br><span class="line">rest=rest*<span class="number">10</span>+a.num[i];</span><br><span class="line"><span class="keyword">if</span>(rest&lt;d)&#123;</span><br><span class="line">w.num[w.len-i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">w.num[w.len-i]=rest/d;</span><br><span class="line">rest%=d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(w.num[w.len]==<span class="number">0</span>&amp;&amp;w.len&gt;<span class="number">1</span>)&#123;w.len--;&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=w.len;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">cout&lt;&lt;w.num[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;rest;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;c&gt;&gt;d;</span><br><span class="line">a.len=<span class="built_in">strlen</span>(c);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.len;i++)&#123;</span><br><span class="line">a.num[i]=c[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">chufa</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初赛 积累</title>
      <link href="/2020/oi-preliminary-trick/"/>
      <url>/2020/oi-preliminary-trick/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-S"><a href="#2019-S" class="headerlink" title="2019 S"></a>2019 S</h1><ol><li>第18题 cin与getline</li></ol><p>cin不能输入空字符串<br>getline能输入空串</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string s,t;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line"><span class="built_in">getline</span>(cin,t);</span><br></pre></td></tr></table></figure><h1 id="2018-S"><a href="#2018-S" class="headerlink" title="2018 S"></a>2018 S</h1><ol><li>第21题 康托展开（待补全）</li></ol><p><a href="http://chen.oinsm.com/2020/02/25/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80-%E5%85%A8%E6%8E%92%E5%88%97-%E9%80%86%E8%BF%90%E7%AE%97/">康托展开(全排列)与逆运算 - Chen’Blog</a><br><a href="https://www.cnblogs.com/YoungNeal/p/8504123.html">总结 康托展开及其逆运算 - YoungNeal</a><br><a href="https://www.cnblogs.com/doublebit/p/12254804.html">学习笔记-康托展开与逆康托展开 - DoubleBit</a></p><h1 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h1><p>面向对象：simula67,c++,java,c#…</p><p>面向过程 C，Fortran，Pascal…</p><p>解释型：Python，JavaScript，Perl，Shell…</p><p>编译型：C，C++，Pascal，Object Pascal…</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xor运算规则</title>
      <link href="/2020/oi-xor-calc/"/>
      <url>/2020/oi-xor-calc/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">设10进制数a b c d</span><br><span class="line">1. a xor a == 0；</span><br><span class="line">2. a xor b == b xor a (相当于 乘法加法的交换律)</span><br><span class="line">3. a xor b xor c == a xor (b xor c) == (a xor b) xor c (相当于加法乘法的结合律)</span><br><span class="line">4. a xor b xor a </span><br><span class="line">== a xor a xor b</span><br><span class="line">== (a xor a) xor b </span><br><span class="line">== 0 xor b ==b</span><br><span class="line">5.  d == a xor b xor c</span><br><span class="line">==&gt; d xor a == a xor a xor b xor c</span><br><span class="line">==&gt; d xor a == b xor c</span><br><span class="line">==&gt; d xor a xor d == b xor c xor d</span><br><span class="line">==&gt; a == d xor b xor c</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[题解] Luogu P5836</title>
      <link href="/2020/oi-luogu-p5836/"/>
      <url>/2020/oi-luogu-p5836/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">100005</span>;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> h[Maxn],g[Maxn];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>&#123;</span><br><span class="line"><span class="type">int</span> u,v,next;</span><br><span class="line">&#125;e[<span class="number">2</span>*Maxn];</span><br><span class="line"><span class="type">int</span> cnt=<span class="number">0</span>,head[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">e[++cnt]=(Edge)&#123;u,v,head[u]&#125;;</span><br><span class="line">head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> fa[Maxn][<span class="number">31</span>],dep[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> now,<span class="type">int</span> father)</span></span>&#123;</span><br><span class="line">h[now]=h[father];</span><br><span class="line"><span class="keyword">if</span>(s[now<span class="number">-1</span>]==<span class="string">&#x27;H&#x27;</span>)&#123;</span><br><span class="line">h[now]++;</span><br><span class="line">&#125;</span><br><span class="line">g[now]=g[father];</span><br><span class="line"><span class="keyword">if</span>(s[now<span class="number">-1</span>]==<span class="string">&#x27;G&#x27;</span>)&#123;</span><br><span class="line">g[now]++;</span><br><span class="line">&#125;</span><br><span class="line">fa[now][<span class="number">0</span>]=father;</span><br><span class="line">dep[now]=dep[father]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=dep[now];i++)&#123;</span><br><span class="line">fa[now][i]=fa[fa[now][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[now];~i;i=e[i].next)&#123;</span><br><span class="line"><span class="keyword">if</span>(e[i].v!=father) <span class="built_in">dfs</span>(e[i].v,now);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> log2n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LCA</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[a]&gt;dep[b])&#123;</span><br><span class="line"><span class="built_in">swap</span>(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=log2n;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[a]&lt;=dep[b]-(<span class="number">1</span>&lt;&lt;i))&#123;</span><br><span class="line">b=fa[b][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a==b) <span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=log2n;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[a][i]!=fa[b][i])&#123;</span><br><span class="line">a=fa[a][i];</span><br><span class="line">b=fa[b][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fa[a][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span> vis[Maxn]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in">sizeof</span>(head));</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;cin&gt;&gt;s;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="type">int</span> u,v;</span><br><span class="line">cin&gt;&gt;u&gt;&gt;v;</span><br><span class="line"><span class="built_in">add</span>(u,v);<span class="built_in">add</span>(v,u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">log2n=<span class="built_in">log</span>(n)/<span class="built_in">log</span>(<span class="number">2</span>)+<span class="number">0.5</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="built_in">sizeof</span>(vis));</span><br><span class="line"><span class="type">int</span> u,v,ans;<span class="type">char</span> p;</span><br><span class="line">cin&gt;&gt;u&gt;&gt;v&gt;&gt;p;</span><br><span class="line">ans=<span class="built_in">LCA</span>(u,v);</span><br><span class="line"><span class="type">int</span> hh=h[u]+h[v]<span class="number">-2</span>*h[ans];</span><br><span class="line"><span class="type">int</span> gg=g[u]+g[v]<span class="number">-2</span>*g[ans];</span><br><span class="line"><span class="keyword">if</span>(s[ans<span class="number">-1</span>]==<span class="string">&#x27;H&#x27;</span>)&#123;</span><br><span class="line">hh++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">gg++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="string">&#x27;H&#x27;</span>&amp;&amp;hh&gt;<span class="number">0</span>)&#123;cout&lt;&lt;<span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p==<span class="string">&#x27;G&#x27;</span>&amp;&amp;gg&gt;<span class="number">0</span>)&#123;cout&lt;&lt;<span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;cout&lt;&lt;<span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【模板】单源最短路径-Dijkstra+堆优化</title>
      <link href="/2020/oi-dijkstra-optimization/"/>
      <url>/2020/oi-dijkstra-optimization/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Maxn=<span class="number">10010</span>,Maxm=<span class="number">500010</span>;</span><br><span class="line"><span class="type">long</span> n,m,s;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>&#123;</span><br><span class="line"><span class="type">long</span> u,v,w,next;</span><br><span class="line">&#125;e[Maxm];</span><br><span class="line"><span class="type">long</span> head[Maxn],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v,<span class="type">int</span> w)</span></span>&#123;</span><br><span class="line">e[++cnt]=(Edge)&#123;u,v,w,head[u]&#125;;</span><br><span class="line">head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> dis,pos;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span> &lt;( <span class="type">const</span> node &amp;x )<span class="type">const</span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.dis&lt;dis;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;node&gt; q;</span><br><span class="line"><span class="type">int</span> dist[Maxn];<span class="type">bool</span> vis[Maxn];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">dist[i]=INT_MAX;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="built_in">sizeof</span>(vis));</span><br><span class="line">dist[s]=<span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>((node)&#123;dist[s],s&#125;);</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line"><span class="type">int</span> x=q.<span class="built_in">top</span>().pos;</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span>(vis[x]) <span class="keyword">continue</span>;</span><br><span class="line">vis[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x];i;i=e[i].next)&#123;</span><br><span class="line"><span class="type">int</span> y=e[i].v;</span><br><span class="line"><span class="keyword">if</span>(dist[y]&gt;dist[x]+e[i].w)&#123;</span><br><span class="line">dist[y]=dist[x]+e[i].w;</span><br><span class="line">q.<span class="built_in">push</span>((node)&#123;dist[y],y&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in">sizeof</span>(head));</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="type">int</span> u,v,w;</span><br><span class="line">cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;</span><br><span class="line"><span class="built_in">add</span>(u,v,w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dijkstra</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cout&lt;&lt;dist[i]&lt;&lt;<span class="string">&quot; &quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定义无穷大的奇技淫巧</title>
      <link href="/2020/oi-infinity-trick/"/>
      <url>/2020/oi-infinity-trick/</url>
      
        <content type="html"><![CDATA[<p>##1.头文件方式##</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//头文件</span><br><span class="line">#include &lt;limits.h&gt;</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;使用方式<br>INT_MAX LONG_MAX 等等<br>具体链接：[C 标准库 – &lt;limits.h&gt; | 菜鸟教程][1]<br>[1]: <a href="https://www.runoob.com/cprogramming/c-standard-library-limits-h.html">https://www.runoob.com/cprogramming/c-standard-library-limits-h.html</a><br>##2.位运算##</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//使用方式</span><br><span class="line">(1&lt;&lt;31)</span><br><span class="line">or</span><br><span class="line">0x3f 0x7f </span><br></pre></td></tr></table></figure><p>##3.备注##<br>如果初始化数组无穷大（0x7f7f7f7f）的话，要用for跑一次，否则memset会全部初始化为-1</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2^i&lt;=n计算方式</title>
      <link href="/2020/oi-calc-trick/"/>
      <url>/2020/oi-calc-trick/</url>
      
        <content type="html"><![CDATA[<blockquote><p>适用于倍增等算法中<br>如：倍增LCA算法 计算出最多向上跳跃次数</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="type">int</span> i=<span class="built_in">log</span>(n)/<span class="built_in">log</span>(<span class="number">2</span>)+<span class="number">0.5</span>;<span class="comment">//公式</span></span><br><span class="line">cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2895 [USACO08FEB]Meteor Shower S 题解</title>
      <link href="/2020/2020-Luogu-P2895/"/>
      <url>/2020/2020-Luogu-P2895/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一道标准的BFS求最优值问题，外带几个坑<br>本蒟蒻写了30min 查了1h的bug</p></blockquote><blockquote><p>思路<br>当走到无陨石砸落位置时，输出答案并结束<br>用一个二维数组进行标记陨石砸落的位置和最早时间，若无砸落则标记为-1<br>走的过程中，将当前位置的四个方向存入队列，<br>要求：1.不越界（nx&gt;&#x3D;0&amp;&amp;ny&gt;&#x3D;0）2.走到下一个点时，恰好没有陨石砸落（time1[nx][e2.y1]&gt;e2.t1或time1[nx][ny]&#x3D;&#x3D;-1）</p></blockquote><blockquote><p>下面是AC代码+注释</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> m;<span class="comment">//陨石的数量</span></span><br><span class="line"><span class="type">bool</span> vis[<span class="number">305</span>][<span class="number">305</span>];<span class="comment">//标记是否走过该点</span></span><br><span class="line"><span class="type">int</span> time1[<span class="number">305</span>][<span class="number">305</span>];<span class="comment">//记录陨石掉落的最早时间</span></span><br><span class="line"><span class="type">int</span> dx[]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[]=&#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//方向数组</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> x1,y1,t1;<span class="comment">//坐标+走过该点时所用时间</span></span><br><span class="line">&#125;;</span><br><span class="line">node e1,e2;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;m;</span><br><span class="line"><span class="built_in">memset</span>(time1,<span class="number">-1</span>,<span class="built_in">sizeof</span>(time1));</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="built_in">sizeof</span>(vis));</span><br><span class="line"><span class="comment">//初始化数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="type">int</span> x,y,t;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y&gt;&gt;t;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">4</span>;j++)&#123;</span><br><span class="line"><span class="type">int</span> nx,ny;</span><br><span class="line">nx=x+dx[j];ny=y+dy[j];</span><br><span class="line"><span class="keyword">if</span>(nx&gt;=<span class="number">0</span>&amp;&amp;ny&gt;=<span class="number">0</span>&amp;&amp;(time1[nx][ny]==<span class="number">-1</span>||time1[nx][ny]&gt;t))&#123;</span><br><span class="line">time1[nx][ny]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">queue&lt;node&gt; q;</span><br><span class="line">e1.x1=<span class="number">0</span>;e1.y1=<span class="number">0</span>;e1.t1=<span class="number">0</span>;vis[<span class="number">0</span>][<span class="number">0</span>]=<span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(e1);</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">e1=q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span>(time1[e1.x1][e1.y1]==<span class="number">-1</span>)&#123;</span><br><span class="line">cout&lt;&lt;e1.t1&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//判断是否结束</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">e2.x1=e1.x1+dx[i];</span><br><span class="line">e2.y1=e1.y1+dy[i];</span><br><span class="line">e2.t1=e1.t1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(e2.x1&gt;=<span class="number">0</span>&amp;&amp;e2.y1&gt;=<span class="number">0</span>&amp;&amp;vis[e2.x1][e2.y1]==<span class="literal">false</span>&amp;&amp;(time1[e2.x1][e2.y1]&gt;e2.t1||time1[e2.x1][e2.y1]==<span class="number">-1</span>))&#123;</span><br><span class="line">q.<span class="built_in">push</span>(e2);</span><br><span class="line">vis[e2.x1][e2.y1]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Luogu P3375 KMP算法</title>
      <link href="/OI-KMP/"/>
      <url>/OI-KMP/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html"><a href="http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html">字符串匹配的KMP算法–阮一峰的网络日志</a></a></p><p><a href="https://www.luogu.org/blog/code-thinker/kmp-suan-fa-mu-ban"><a href="https://www.luogu.org/blog/code-thinker/kmp-suan-fa-mu-ban">P3375 KMP算法–E_Thinker</a></a></p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMP算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一周年-WeekDay</title>
      <link href="/1-year-weekday/"/>
      <url>/1-year-weekday/</url>
      
        <content type="html"><![CDATA[<blockquote><p>谨以此纪念将成为过去的2019年</p></blockquote><h1 id="日常学习"><a href="#日常学习" class="headerlink" title="日常学习"></a>日常学习</h1><p>上半年，我的学习不算十分的突出，没有大起大落，十分平庸，部分学科有突出表现。从九月份开始，开始有些许进步，但似乎受到OI学习的时间上影响。偏科严重还是常见。不过随着CSP-J的告一段落，应该能有更大的提升吧，期望自己在初三学习中能稳住自己，稳步前进！</p><p>OI学科的</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2019 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CCF CSP-J初赛总结</title>
      <link href="/OI-CSP-J-2019-1/"/>
      <url>/OI-CSP-J-2019-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>两小时很快，但是一辈子很长</p></blockquote><span id="more"></span><p>总的来说，本次笔试内容还算简单，出了一堆原题（分扑克牌，5个袋子八个球），然鹅我全爆（QwQ）。大题则考了双关键字的计数排序、DFS、树的深度等算法，幸亏没遇到提高组的「十年OI一场空，一道状压见祖宗」，算是幸运了吧</p><p>关于题型的改变，在认证之前，就放出消息来。我觉得，反而整张试卷的难度变得简单，没有像往年一样难。</p><p>考之前一共是前前后后花了两三周时间进行复习，（这<del>留校察看</del>的国庆真·没白费），和几位同是初三的学霸一起复习，<del>不过他们考的好像不太好</del>。</p><p>接下来，好好复习，争取省一，给初中OI生涯画上一个圆满的句号</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2019 </tag>
            
            <tag> CSP-J </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ 快读</title>
      <link href="/OI-Fast-Read/"/>
      <url>/OI-Fast-Read/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> p;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(p&lt;=<span class="string">&#x27;0&#x27;</span>||p&gt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="string">&#x27;-&#x27;</span>)  f=<span class="number">-1</span>;</span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+p-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//x&lt;&lt;n相当于 x*2^n</span></span><br><span class="line">p=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Luogu P3374 树状数组</title>
      <link href="/OI-BIT/"/>
      <url>/OI-BIT/</url>
      
        <content type="html"><![CDATA[<p><a href="https://bestsort.cn/2019/04/26/195/">树状数组 数据结构详解与模板(可能是最详细的了) | bestsort</a></p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>班刊制作有感</title>
      <link href="/the-class-publication/"/>
      <url>/the-class-publication/</url>
      
        <content type="html"><![CDATA[<blockquote><p>拖延症患者晚期，本来应该5月中旬发的::&gt;_&lt;::Sorry</p><p>现在来说一说制作班刊两次的感受吧，以及总结教训与经验</p></blockquote><span id="more"></span><h1 id="The-First-Version"><a href="#The-First-Version" class="headerlink" title="The First Version"></a>The First Version</h1><p>大概是在4月中旬，我和另外两位同学开始班刊的制作。我呢，主要是解决技术上的处理问题，还有就是排版；而另两位同学，则是负责收集稿件和版面的设计与美化。</p><p>第一次，对制作班刊这种新鲜事还是有些难弄，毕竟并不擅长这一方面，也只能将就硬着头皮上了。刚开始用的是Microsoft Word，收集的文稿也全都是要求这一格式。但也不知道谁抽了什么风 &#x3D;.&#x3D; 要求换成Microsoft PowerPoint，我硬生生的花了2小时干转换这件事，他们俩就找背景和搜寻以前班级活动的Photo</p><p>虽然分工很明确，理想很美好，但现实很残酷。光是收取稿件这件事，收了大约有三个星期，更出奇的是，全班只有一半不到的人，写了文章并上交。虽然，每一张背景都是辛辛苦苦找的，以及字体的选择，也是十分精心的，但最后找到的制作商家，却出奇意料的差。字体全部变成宋体，以及书本周围有一圈边框，当我们收到书的时候，激动万分，却是被泼了一盆冷水。</p><h1 id="The-Second-Version-The-Last-Version"><a href="#The-Second-Version-The-Last-Version" class="headerlink" title="The Second Version &amp; The Last Version"></a>The Second Version &amp; The Last Version</h1><p>于是乎，第二次班刊的制作便提上了议程。首先是收集稿件，这次有着班长的加持，几乎全班的人也都认真做好，上交给我们，这确实是令我们出乎意料。过程省略一万字……不过，我们在对字体的问题处理时，选用了PDF文件，并将特殊的字体文件发给商家。</p><p>咳咳，重点部分！由于第一次班主任寻找的商家并不满意，我们这一次直接自行寻找。不过，头一次自己找商家，果然因为是学生，商家够黑；Soga，我们又找了一家小作坊，便宜了不止一半。（过程省略一万字 懒癌发作 孬意思）</p><p>总而言之，其实最重要的除了客观条件之外，就是团队间的合作与交流，在制作班刊的过程中，不断提出新意见，最后整合到一起，应用在稿子上。毕竟，古人常说的「天时地利人和」也不是随便说说的！</p><p>接下来就是成品展示时间啦！(后期较丑 请谅解)<br><img src="/../posts-img/the-class-publication-1.png" alt="the-class-publication-1"><br><img src="/../posts-img/the-class-publication-2.png" alt="the-class-publication-2"><br><img src="/../posts-img/the-class-publication-3.png" alt="the-class-publication-3"></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2019 </tag>
            
            <tag> 班刊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜谈 2019-6-21</title>
      <link href="/nt-2019-6-21/"/>
      <url>/nt-2019-6-21/</url>
      
        <content type="html"><![CDATA[<blockquote><p>初中的最后一场生地考试——生地会考</p></blockquote><span id="more"></span><p>答题卡被收走的一刻，便意味着，两年的生物和地理已经结束</p><p>如此平常的度过，安然面对</p><p>似乎有些失落</p><p>风起风落，云卷云舒，人来人往</p><p>终究，现在所有的一切，还是会随着时间的流逝而消失时间的长河之中呀</p><p>PS: 顺路Diss WordPress的Android版本，看不完整的中文翻译，我还不如用英文界面，还有编辑器，感觉就是给自己画了一个有缺陷的大饼 &#x2F;抛手</p><p style="text-align: right">2019-6-21 深夜</p>]]></content>
      
      
      <categories>
          
          <category> 夜谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 夜谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可否冲破</title>
      <link href="/break-through/"/>
      <url>/break-through/</url>
      
        <content type="html"><![CDATA[<blockquote><p>嗯 没错 我又回来了</p><p>差不多快接近几个月没发文章了</p><p>这段时间 发生了太多太多</p><p>且听我慢慢叙来</p></blockquote><span id="more"></span><h1 id="去年，我十五岁"><a href="#去年，我十五岁" class="headerlink" title="去年，我十五岁"></a>去年，我十五岁</h1><p>我<br>终于长大了<br>不知是巧合<br>还是上天的宠爱<br>学校开了信息学竞赛<br>OI梦，如期实现</p><p>不知何时<br>喜欢听起了歌<br>特别是感人至深的粤语歌<br>一首首经典名曲<br>至今循环播放</p><p>寒假时<br>几个晚上的努力<br>终于会开摩托车<br>虽然不是GN125这样男装车<br>只是一台普普通通的WH125T-6<br>我想要的<br>第一次<br>通过自己的努力<br>得来了</p><p>春节里<br>抢到了无数红包<br>才买下了域名 <code>Weekday.work</code> 和在主机壳买最便宜的主机 <code>ヽ(●-`Д´-)ノ99+23死贵 好吧</code><br>毕竟学生党么 归根到底 还是穷</p><h1 id="今年，我十六了"><a href="#今年，我十六了" class="headerlink" title="今年，我十六了"></a>今年，我十六了</h1><p>今年，是初二<br>我希望<br>能再次得到前100名<br>平时能够自制</p><p>多刷题<br>在今年的比赛上<br>斩断重重荆棘<br>获得属于自己内心深处的成功</p><p>能在前端学习上<br>更深层<br>毕竟<br>小学的技能树<br>现在差不多要蹦了</p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p style="text-align:right">就这样吧</p><p style="text-align:right">祝一切安好</p><p style="text-align:right">2019-2-14 Thursday</p>---评论1：- zdx- 2019-04-16 23:19- nb]]></content>
      
      
      <categories>
          
          <category> Live </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2018 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二进制与十进制的那些事</title>
      <link href="/binary-and-decimal/"/>
      <url>/binary-and-decimal/</url>
      
        <content type="html"><![CDATA[<h1 id="二进制-与-十进制"><a href="#二进制-与-十进制" class="headerlink" title="二进制 与 十进制"></a>二进制 与 十进制</h1><blockquote><p>我们日常所用的计算为十进制，即数字为0,1,2,3,4,5,6,7,8,9，逢十进一，(例 1+9 &#x3D; 10)<br>那么二进制的数字为0,1，逢二进一，(例 1+1 &#x3D; 10 即十进制中的2)</p></blockquote><h1 id="二进制转十进制"><a href="#二进制转十进制" class="headerlink" title="二进制转十进制"></a>二进制转十进制</h1><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><blockquote><p>设这个数是两位 十位为a 个位为b</p></blockquote><p>那么十进制数等于 <code>a*2^1 + b*2^0</code></p><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>以二进制数10为例 十进制数为 <code>1*2^1 + 0*2^0 = 2</code></p><p>以二进制数111为例 十进制数为 <code>1*2^2 + 1*2^1 + 1*2^0 = 7</code></p><blockquote><p>PS: 除0以外，任何数的0次幂，都为1</p></blockquote><h1 id="十进制转二进制"><a href="#十进制转二进制" class="headerlink" title="十进制转二进制"></a>十进制转二进制</h1><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><blockquote><p>以十进制数2为例<br>2&#x2F;2&#x3D;1 …… 0<br>1&#x2F;2&#x3D;0 …… 1<br>从下往上数 那么十进制数2等于二进制数10</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进制转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Windows子系统(WSL)下安装Docker</title>
      <link href="/WSL-Install-Docker/"/>
      <url>/WSL-Install-Docker/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在使用了 Windows 10 Pro 一段时间后，我开始使用WSL和Docker，经过一天的探索之后，写出了以下教程</p><p>此教程只适用于Windows 10 非 Home 版本</p></blockquote><h3 id="安装环境与准备"><a href="#安装环境与准备" class="headerlink" title="安装环境与准备"></a>安装环境与准备</h3><ul><li><p>System: Windows 10 Pro x64</p></li><li><p>RAM:4GB</p></li><li><p>CPU:Intel Core i5-2410M</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">启用功能: Hyper-V   与   适用于 Linux 的 Windows 子系统</span><br><span class="line">步骤: 控制面板 -&gt; 程序 -&gt; 程序和功能 -&gt; 启用或关闭 Windows 功能</span><br><span class="line"></span><br><span class="line">在应用商店里安装 Debian 9</span><br><span class="line">步骤: Microsoft Store -&gt; 搜索 Debian -&gt; 点击并安装 </span><br><span class="line"></span><br><span class="line">安装 Docker <span class="keyword">for</span> Windows</span><br><span class="line">步骤: https://get.daocloud.io/ 在此网页下载 Docker <span class="keyword">for</span> Windows 并安装</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置-Docker-for-Windows"><a href="#配置-Docker-for-Windows" class="headerlink" title="配置 Docker for Windows"></a>配置 Docker for Windows</h3><p>安装 Docker for Windows 之后，在系统托盘 -&gt; 右键 Docker 图标 -&gt; 点击 Setting，如下图：</p><p><img src="/../posts-img/WSL-Install-Docker-1.png" alt="18-08-06-1"></p><p>在 Setting 界面 -&gt; Docker Daemon ,将镜像网站提供的JSON代码填入表中:</p><p><img src="/../posts-img/WSL-Install-Docker-2.png" alt="18-08-06-2"></p><h3 id="配置-Debian-WSL"><a href="#配置-Debian-WSL" class="headerlink" title="配置 Debian(WSL)"></a>配置 Debian(WSL)</h3><p>打开 Debian 并初始化设置完毕后，推荐更换Apt-get国内镜像源；</p><ol><li><p>删除旧版本Docker，使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get remove docker \</span><br><span class="line">               docker-engine \</span><br><span class="line">               docker.io</span><br></pre></td></tr></table></figure></li><li><p>使用apt，安装HTTPS传输软件包与CA证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install \</span><br><span class="line">     apt-transport-https \</span><br><span class="line">     ca-certificates \</span><br><span class="line">     curl \</span><br><span class="line">     gnupg2 \</span><br><span class="line">     lsb-release \</span><br><span class="line">     software-properties-common</span><br></pre></td></tr></table></figure></li><li><p>安装软件源的 GPG key</p><p>鉴于国内网络问题，推荐使用国内镜像源，官方源请在注释中查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 官方源</span></span><br><span class="line"><span class="comment"># $ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</span></span><br></pre></td></tr></table></figure></li><li><p>添加软件源并更新</p><blockquote><p>此为稳定版本的命令，如若需要测试版或每日构建版，请将”stable”更改为”test”或”nightly”</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository \</span><br><span class="line">   <span class="string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian \</span></span><br><span class="line"><span class="string">   <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">   stable&quot;</span></span><br><span class="line">$ sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 官方源</span></span><br><span class="line"><span class="comment"># $ sudo add-apt-repository \</span></span><br><span class="line"><span class="comment">#    &quot;deb [arch=amd64] https://download.docker.com/linux/debian \</span></span><br><span class="line"><span class="comment">#    $(lsb_release -cs) \</span></span><br><span class="line"><span class="comment">#    stable&quot;</span></span><br><span class="line"><span class="comment"># $ sudo apt-get update</span></span><br></pre></td></tr></table></figure></li><li><p>使用自动安装脚本</p><blockquote><p>来自官方的便携脚本，会将安装 Docker-CE 的一切事项与准备搞掂</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">$ sudo sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure></li><li><p>将自己所在用户添加进组中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo usermod -aG docker <span class="variable">$USER</span></span><br><span class="line"><span class="comment"># $USER 应当改为你当前在 Debian 所用的用户名</span></span><br></pre></td></tr></table></figure></li><li><p>更改Docker CE Server端默认连接端口</p><p>用 Vim 或 Nano 打开 <code>~/.bashrc</code> </p><p>将以下代码在末尾处添进：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export DOCKER_HOST=tcp://0.0.0.0:2375</span><br></pre></td></tr></table></figure><p>保存并刷新：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li></ol><h3 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h3><p>运行以下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker version</span><br></pre></td></tr></table></figure><p>如果出现:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Client:</span><br><span class="line"> Version:           18.06.0-ce</span><br><span class="line"> API version:       1.24 (downgraded from 1.38)</span><br><span class="line"> Go version:        go1.10.3</span><br><span class="line"> Git commit:        0ffa825</span><br><span class="line"> Built:             Wed Jul 18 19:09:33 2018</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          1.12.3</span><br><span class="line">  API version:      1.24 (minimum version )</span><br><span class="line">  Go version:       go1.6.3</span><br><span class="line">  Git commit:       6b644ec</span><br><span class="line">  Built:            Wed Oct 26 23:26:11 2016</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>无需在意版本号等，只要有 Client 和 Server 就可以了~</p></blockquote><p>运行 Hello-world 镜像:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p>如果成功，会出现:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">&quot;hello-world&quot;</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/engine/userguide/</span><br></pre></td></tr></table></figure><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>现在你可以开始拉取并运行镜像了</p><p>参考链接:</p><ol><li><a href="https://www.cnblogs.com/cielosun/p/8728316.html">在Linux的Windows子系统上(WSL)使用Docker（Ubuntu）</a> </li><li><a href="https://www.cnblogs.com/cielosun/p/8728316.html">使用WSL连接Docker for Windows</a></li><li><a href="https://yeasy.gitbooks.io/docker_practice/install/debian.html">Debian·Docker——从入门到实践</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2017年暑假总结</title>
      <link href="/2017/2017-summer-holiday/"/>
      <url>/2017/2017-summer-holiday/</url>
      
        <content type="html"><![CDATA[<blockquote><p>随着九月份越来越近的脚步，今年的暑假即将化作灰，成为我们口中的过去<br>我也即将成为一名中学生，学到更多的知识</p></blockquote><h2 id="七月份"><a href="#七月份" class="headerlink" title="七月份"></a>七月份</h2><p>七月份，我在网上赚了一笔很小的钱，是的，你没看错，的确很小，40元</p><p>在这其中，我领悟到了深刻的教训，那就是：</p><p>给别人仿站之前，必须把该问的都问清楚了，该提的条件都提清楚了；</p><p>不要给学生仿站；</p><p>价格不要被压的很低。</p><p>为何我会有如此深刻的感想，事情是这样的…</p><p>某一天有一人找我仿站，两人谈价格，从￥1000下降到了￥380</p><p>最后做好了主题，又跟我说要整站…心中默念问候你全家一百遍</p><p>把数据什么都搞定后，又说要ASP版……心中再次默念问候你全家一百遍</p><p>一怒之下，我把他QQ删了，把各种数据都删干净了，不想再弄</p><p>最重要的一点是，他是初二狗，就是一个赚差价、不懂编程语言的初二狗。</p><p>后来，他还想再加我QQ，我没理他，屏蔽为黑名单了。</p><h2 id="八月份"><a href="#八月份" class="headerlink" title="八月份"></a>八月份</h2><p>八月份，进入了立秋，天气炎热。</p><p>我也开始学习起来，我去跟一位快初二的同学借来了初一课本，预习起来</p><p>我也开始整理住宿需要的东西，学习需要的东西</p><p>和一家人一起看了《战狼2》，还不错，良心国产电影(๑•̀ㅂ•́)و✧</p><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p>博客会换个主题，估计做出来会很久吧。</p><p>文章的更新，一个月起码有一次月记吧，生活上的事应该会写的更多吧。</p><p>我会专心学习，代码之类的事还是等到假期去做吧。</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Sublime Text 2添加Shadowsocks代理</title>
      <link href="/2017/sublime-text2-agent/"/>
      <url>/2017/sublime-text2-agent/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言<br>由于在安装插件时出现了众所周知的原因<br>不过我找到了一个还不错的解决方案，也不麻烦<br>注：仅适用于Windows XP及以上的操作系统</p></blockquote><p>首先安装Shadowsocks，并配置好服务器</p><p>下载Cow,配置rc.txt,配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">listen = http://127.0.0.1:7777</span><br><span class="line"></span><br><span class="line">#############################</span><br><span class="line"># 指定二级代理</span><br><span class="line">#############################</span><br><span class="line"></span><br><span class="line"># SOCKS5:</span><br><span class="line">   proxy = socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure><p>打开Sublime Text 2 &gt; Preferences &gt; Package Setting &gt; Package Control &gt; Setting - User，配置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;bootstrapped&quot;: true,</span><br><span class="line">    &quot;http_proxy&quot;: &quot;127.0.0.1:7777&quot;,</span><br><span class="line">    &quot;in_process_packages&quot;:</span><br><span class="line">    [</span><br><span class="line">    ],</span><br><span class="line">    &quot;installed_packages&quot;:</span><br><span class="line">    [</span><br><span class="line">        &quot;ChineseLocalizations&quot;,</span><br><span class="line">        &quot;Emmet&quot;,</span><br><span class="line">        &quot;Package Control&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在打开Cow与Shadowsocks，就可以安装插件了.Oh Yeah!</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TSC TTP-244系列机型打印机打印错误</title>
      <link href="/2017/TSC-TTP-244-print-fault/"/>
      <url>/2017/TSC-TTP-244-print-fault/</url>
      
        <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>机型：TSC TTP-244 Plus&#x2F;Pro</p><p>纸张：双列间距纸</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="确定数据"><a href="#确定数据" class="headerlink" title="确定数据"></a>确定数据</h3><p>再次确定纸张的长宽和间距，核对模板设置</p><h3 id="重新测纸"><a href="#重新测纸" class="headerlink" title="重新测纸"></a>重新测纸</h3><p>关闭机器后，按住暂停键（PAUSE）不放并开机，直到出纸后再松开按键；</p><p>接着确定出纸位置，并按出纸键（FEED），检查纸张是否还在同一位置</p><h3 id="如果不在同一位置"><a href="#如果不在同一位置" class="headerlink" title="如果不在同一位置"></a>如果不在同一位置</h3><p>在操作正确的情况下，一般情况是感测器位置未调整：</p><p>244系列打印机在左侧拨柄卡勾后有选择感测器位置，有两个档位，分别为R,M两档；</p><p>打印双列纸和四列纸选择选择R档，其他纸张选择M挡；</p><p>再次测纸，如果失败，那么应该是感应器故障。</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>六一行动之一：买同学录</title>
      <link href="/buy-classmate-alumni/"/>
      <url>/buy-classmate-alumni/</url>
      
        <content type="html"><![CDATA[<blockquote><p>话说就快六一了，我很久也没写博客了<br>距离多说倒闭时间已不多，本喵换上了网易云跟帖<br>晒一下我买的同学录吧~</p></blockquote><span id="more"></span><p>这是订单：</p><img src="../posts-img/buy-classmate-alumni-1.png" alt="buy-classmate-alumni-1" style="zoom: 33%;" /><blockquote><p>让我们等待开箱~</p></blockquote><blockquote><p>话说我要不要发到什么值得买那呢(⊙o⊙)?</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Live </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>六年6班合影</title>
      <link href="/2017-group-photo-school/"/>
      <url>/2017-group-photo-school/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天，学校给我们这些毕业生合影…<span id="more"></span></p></blockquote><blockquote><p>虽然是合影，不过我们班也算是独一无二的了吧…</p><p>合影时，就我们班缺了个语文课老师…</p><p>给我们班上课那位老师请假，说是去照顾亲戚去了…</p><p>然后上学期那位老师…在四楼上，硬是不下来…</p><p>我去问的时候，她说，我们班没有一个去请她，她又怎能自告奋勇呢？</p><p>总有一丝淡淡的忧伤，这应该算是一个遗憾吧 ￣へ￣</p></blockquote><p>话说要期末考试了，升中考，考私立…我要更新么…</p><p>还有评论系统…要换网易云么… &#x2F;纠结</p><p>过些时日，发张照片给你们看</p>]]></content>
      
      
      <categories>
          
          <category> Live </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云端上的Hexo</title>
      <link href="/hexo-coding-ide/"/>
      <url>/hexo-coding-ide/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这段时间一直用着Hexo，感觉良好~</p><p>于是乎，多电脑运行就显得灰常重要~</p><p>不过，我找到了一个不错的idea~</p></blockquote><span id="more"></span><p><img src="/../posts-img/hexo-coding-ide-1.png" alt="Coding IDE"></p><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><ol><li>注册Coding账户，而且需要有码币（可通过做任务领取）</li><li>在Coding.net中新建项目</li><li>进入Web IDE，创建一个（最低配置）</li></ol><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>打开 运行环境，点击 ide-tty-nodejs </p><p>设置Git，在终端中输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure><p>安装Hexo:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h1 id="使用注意"><a href="#使用注意" class="headerlink" title="使用注意"></a>使用注意</h1><p>在使用<code>hexo s</code>时，输入此命令，再打开访问链接，点击那个链接，使用后，需要自己删除链接。</p><p>如果没问题后，就<code>hexo d</code>吧~不过记得配置一下！</p><p>PS: 这篇文章，我拖了1年才写好…</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://garth.im/2015/04/hexo-on-coding-net-webide/">使用Coding.net WebIDE搭建Hexo云端写作环境 - Garth’s Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Coding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPM换源笔记</title>
      <link href="/npm-change-the-source/"/>
      <url>/npm-change-the-source/</url>
      
        <content type="html"><![CDATA[<blockquote><p>记录一下Node.JS的NPM更换镜像过程</p></blockquote><span id="more"></span><h1 id="关于NPM"><a href="#关于NPM" class="headerlink" title="关于NPM"></a>关于NPM</h1><p>全称Node Package Manager,通常称为node包管理器。顾名思义，它的主要功能就是管理node包，包括:安装 卸载 更新 查看 搜索 发布等.</p><p>由于NPM的默认镜像源在国外，由于众所周知的问题，所以国内用户使用起来各种蛋疼…</p><p>我用的是淘宝npm镜像：</p><ul><li>Url:<a href="https://npm.taobao.org/">https://npm.taobao.org</a></li><li>Registry url:<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></li></ul><h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><p>1.临时使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org install express</span><br></pre></td></tr></table></figure><p>2.持久使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"># 验证</span><br><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p>好了，让我们一起愉快的使用NPM吧~</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NPM </tag>
            
            <tag> Node.JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>尴尬的一瞬</title>
      <link href="/ganga-2017-qizhongkaoshi/"/>
      <url>/ganga-2017-qizhongkaoshi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天期中考，考数学时，我写完试卷，检查到一半，没事在草稿纸上画了起来…<br>下一秒，数学老师走过来，我被喷得狗血淋头：“你是不是有毛病！”<br>尴尬…</p></blockquote><p>PS: 不过话说回来，这次期中考前，我貌似有认真复习 &#x2F;捂脸</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> Live </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>震惊！多说评论走向倒闭</title>
      <link href="/duoshuo-out/"/>
      <url>/duoshuo-out/</url>
      
        <content type="html"><![CDATA[<p>一个月前（3月21日），多说在其官方论坛发布了关闭公告[1]：<br><img src="/../posts-img/duoshuo-out-1.png" alt="duoshuo-out-1"></p><span id="more"></span><blockquote><p>多说公告下面的留言，清一水的都是多年使用多说的站长们怀念和建议。</p><p>虽然多说是很久没更新代码和修复BUG了，但国内评论系统老大的仍旧是多说。</p><p>Disqus还活着，多说却死了。哎，毕竟是一个没有盈利的项目，而关闭，则是最后的路。</p></blockquote><h1 id="第三方评论系统"><a href="#第三方评论系统" class="headerlink" title="第三方评论系统"></a>第三方评论系统</h1><ol><li><a href="https://disqus.com/">Disqus</a></li></ol><p>虽然被墙了，但是搭个梯也是能用滴~</p><ol start="2"><li><a href="https://gentie.163.com/">网易云跟帖</a></li></ol><p>出自网易家，正处于Beta阶段。</p><h2 id="最后别忘了6月1日前把数据迁出多说"><a href="#最后别忘了6月1日前把数据迁出多说" class="headerlink" title="最后别忘了6月1日前把数据迁出多说~"></a>最后别忘了6月1日前把数据迁出多说~</h2><p>[1]: <a href="http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241">重要通知: 多说即将关闭</a></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多说 </tag>
            
            <tag> Duoshuo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<blockquote><p>尘埃落定，我心依旧。不忘初心，方得始终。</p></blockquote><span id="more"></span><p>又把博客迁Hexo</p><p>文章依旧在</p><p><a href="http://sftp.pw/">Ted</a>资助我了个域名crsno.com</p><p>博客改了个名————ThinkBook</p><p>电脑依然是那个Win</p><p>我依然摆脱不了Win</p><p>风帆云在一次激烈的争吵中倒了</p><p>唉</p><blockquote><p>回忆当初，仍旧前进。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Live </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux那些事：如何编译安装LAMP</title>
      <link href="/archlinux-lamp/"/>
      <url>/archlinux-lamp/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章应该在几天前就发出来，都是拖延症惹的祸~喵<span id="more"></span></p></blockquote><blockquote><p>此文章使用的是普通用户，不是Root</p></blockquote><h1 id="安装Mariadb"><a href="#安装Mariadb" class="headerlink" title="安装Mariadb"></a>安装Mariadb</h1><p>懒得编译Mariadb了，直接 pacman -S 搞定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S mairadb</span><br></pre></td></tr></table></figure><p>表问我为毛是 MariaDB。这样还没安装完，还得初始化数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure><p>启动 mysqld 守护进程，运行安装脚本，然后重新启动守护进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br><span class="line">mysql_secure_installation</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><h1 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.cnnic.cn/apache/httpd/httpd-2.4.20.tar.gz</span><br><span class="line">tar xf httpd-2.4.20.tar.gz</span><br><span class="line"><span class="built_in">cd</span> httpd-2.4.20</span><br><span class="line">sudo ./configure --prefix=/usr/local/httpd2.4.20 --with-mpm=prefork</span><br><span class="line">sudo <span class="built_in">nice</span> make -j4</span><br><span class="line">sudo make install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">rm</span> -rf httpd-2.4.20</span><br><span class="line"><span class="built_in">rm</span> -rf httpd-2.4.20.tar.gz</span><br></pre></td></tr></table></figure><h1 id="安装PHP5"><a href="#安装PHP5" class="headerlink" title="安装PHP5"></a>安装PHP5</h1><p>PHP 放到最后才安装是因为 PHP 编译过程中需要生成一个 libphp5.so 的库文件给 Apache 使用，生成这个文件需要 Apache 的 apxs，为了兼容性就不使用 PHP7 了，还是使用 PHP5。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http://cn2.php.net/distributions/php-5.6.21.tar.gz</span><br><span class="line">tar xf php-5.6.21.tar.gz</span><br><span class="line"><span class="built_in">cd</span> php-5.6.21</span><br><span class="line">sudo ./configure --prefix=/usr/local/php5.6.21 --with-apxs2=/usr/local/httpd2.4.20/bin/apxs --with-mysql --with-mysqli --with-pdo-mysql</span><br><span class="line">sudo <span class="built_in">nice</span> make -j4</span><br><span class="line">sudo make install</span><br><span class="line">sudo <span class="built_in">cp</span> php.ini-production /usr/local/php5.6.21/lib/php.ini</span><br></pre></td></tr></table></figure><h1 id="整合-Apache-和-PHP"><a href="#整合-Apache-和-PHP" class="headerlink" title="整合 Apache 和 PHP"></a>整合 Apache 和 PHP</h1><p>这里有几个要做的，一个是首先要配置自己编译的 Apache 的启动脚本，另外是要配置 Apache 支持 PHP。</p><p>先启动Apache，需在 &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 写一个文件来启动 httpd，命名为 httpd.service</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Apache Web Server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/local/httpd2.4.20/bin/httpd -k start -DFOREGROUND</span><br><span class="line">ExecStop=/usr/local/httpd2.4.20/bin/httpd -k graceful-stop</span><br><span class="line">ExecReload=/usr/local/httpd2.4.20/bin/httpd -k graceful</span><br><span class="line">PrivateTmp=true</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">KillMode=mixed</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>接着执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> httpd</span><br></pre></td></tr></table></figure><p>打开 Apache 的配置文件 <code>/usr/local/httpd2.4.20/conf/httpd.conf</code>，配置一下 PHP 相关的几个参数：</p><ul><li>搜索一下 LoadModule，加入 libphp5.so 的路径 <code>LoadModule php5_module /usr/local/httpd2.4.20/modules/libphp5.so；</code></li><li>找到 IfModule dir_module ，写入一行 <code>DirectoryIndex index.php</code>，结果如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">  DirectoryIndex index.html</span><br><span class="line">  DirectoryIndex index.php</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure></li><li>最后再搜索一下 AddType，加入 PHP<code>AddType application/x-httpd-php .php</code></li></ul><p>启动 Apache 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start httpd</span><br></pre></td></tr></table></figure><p>元芳，写个 <code>phpinfo()</code> 可好？</p><h1 id="整合PHP与MySQL-Maiardb"><a href="#整合PHP与MySQL-Maiardb" class="headerlink" title="整合PHP与MySQL(Maiardb)"></a>整合PHP与MySQL(Maiardb)</h1><blockquote><p>由于Arch比较另类，如果不执行以下命令，PHP 就会无法定位到 mysql.sock 的位置。</p></blockquote><p>登录MySQL，查看mysql.sock的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">MariaDB [(none)]&gt; STATUS;</span><br></pre></td></tr></table></figure><p>我的是 <code>/run/mysqld/mysqld.sock</code>，然后打开 php.ini，找到 <code>pdo_mysql.default_socket</code>、<code>mysql.default_socket</code> 和 <code>mysqli.default_socket</code>，把后面的默认路径补上，比如 <code>mysqli.default_socket = /run/mysqld/mysqld.sock</code>，然后重启 Apache ，OK,LAMP搞定！</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO那些事：HEXO怎么Deploy</title>
      <link href="/hexo-deploy/"/>
      <url>/hexo-deploy/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在群里看到有童鞋问怎么Deploy到Github、Coding，在这里做个笔记。</p></blockquote><span id="more"></span><p>先重装Deploy:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>再把以下代码贴进你的Hexo根目录的_config.yml:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> </span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">//你仓库的SSH链接</span></span><br><span class="line">    <span class="attr">ranch:</span> <span class="string">//你仓库的Page分支</span></span><br></pre></td></tr></table></figure><blockquote><p>记得事先需要把在git上生成的SSH秘钥提供给Coding、Github</p></blockquote><blockquote><p>此教程适用于HEXO 3.x 版本</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArchLinux那些事：yaourt装不了</title>
      <link href="/archlinux-yaourt/"/>
      <url>/archlinux-yaourt/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在Wiki里看到了Yaourt，心想着弄一个吧~<span id="more"></span></p><p>下文是以Root用户执行滴~</p><p>有问题找Google+Wiki，这种事情我我也说不清楚╮(╯▽╰)╭</p><p>没有了 :)</p></blockquote><p>因为yaourt依赖parkage-query，而parkage-query又依赖yajl，所以嘛 |&gt;</p><p>所以先装yajl，再装parkage-query，最后装yaourt。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装yajl</span></span><br><span class="line">sudo pacman -S yajl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装parkage-query</span></span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/package-query.git</span><br><span class="line"><span class="built_in">cd</span> package-query</span><br><span class="line">makepkg -si</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装yaourt</span></span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/yaourt.git</span><br><span class="line"><span class="built_in">cd</span> yaourt</span><br><span class="line">makepkg -s</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后编辑&#x2F;etc&#x2F;pacman.conf，写入以下Code：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">#The Chinese Arch Linux communities packages.</span><br><span class="line">SigLevel = Optional TrustAll</span><br><span class="line">Server   = http://repo.archlinuxcn.org/$arch</span><br></pre></td></tr></table></figure><p>OK!现在可以愉快地<code>sudo yaourt -s</code>啦<del>(≧▽≦)&#x2F;</del></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
